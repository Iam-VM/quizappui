{"ast":null,"code":"import _slicedToArray from\"/home/vm/Desktop/quizApp/quizappui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import GameRenderer from\"./gameRenderer\";import{ADD_RESPONSE}from\"../../queries\";import{useMutation}from\"@apollo/react-hooks\";import Cookies from'js-cookie';import'./playQuestion.css';import QuestionCount from\"./questionCount\";//add response array and showResults func in parent\nvar GameScreen=function GameScreen(props){var _useMutation=useMutation(ADD_RESPONSE),_useMutation2=_slicedToArray(_useMutation,2),triggerMutation=_useMutation2[0],data=_useMutation2[1].data;var _useState=useState(props.progress),_useState2=_slicedToArray(_useState,2),progress=_useState2[0],setProgress=_useState2[1];//changed count to progress\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),questionNumber=_useState4[0],setQuestionNumber=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),questionText=_useState6[0],setQuestionText=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),options=_useState8[0],setOptions=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),timer=_useState10[0],setTimer=_useState10[1];useEffect(function(){if(progress<props.stateData.questions.length){setTimer(20);setQuestionText(props.stateData.questions[progress].question);var optionsArray=[props.stateData.questions[progress].optionOne,props.stateData.questions[progress].optionTwo,props.stateData.questions[progress].optionThree,props.stateData.questions[progress].optionFour];setOptions(optionsArray);setQuestionNumber(progress+1);}if(progress===props.stateData.questions.length){props.showResults();}},[progress]);useEffect(function(){if(timer>0)setTimeout(function(){return setTimer(timer-1);},1000);},[timer]);var triggerNextQuestion=function triggerNextQuestion(){setProgress(progress+1);};var addResponse=function addResponse(response){triggerMutation({variables:{ID:Cookies.get('user_id'),progress:questionNumber,response:response}});};var checkAnswer=function checkAnswer(optionText){if(progress<props.stateData.questions.length){addResponse(optionText);props.responses.push(optionText);setTimeout(function(){return triggerNextQuestion();},500);}};return/*#__PURE__*/React.createElement(\"div\",{className:'gameScreen'},/*#__PURE__*/React.createElement(\"div\",{className:'questionHead'},/*#__PURE__*/React.createElement(\"div\",{className:'questionSubHead'},/*#__PURE__*/React.createElement(\"span\",{className:'questionHeadText'},\"Question: \"),/*#__PURE__*/React.createElement(QuestionCount,{questionNumber:questionNumber,totalQuestions:props.stateData.questions.length})),/*#__PURE__*/React.createElement(\"div\",{className:'timerContainer'},/*#__PURE__*/React.createElement(\"span\",{className:'timerHead'},\"Timer\"),/*#__PURE__*/React.createElement(\"div\",{className:'timer'},timer),/*#__PURE__*/React.createElement(\"div\",{className:'timerUnderLine'}))),/*#__PURE__*/React.createElement(GameRenderer,{questionText:questionText,stateData:props.stateData,questionNumber:questionNumber,options:options,progress:progress,checkAnswer:checkAnswer,totalQuestions:props.stateData.questions.length}));};export default GameScreen;","map":{"version":3,"sources":["/home/vm/Desktop/quizApp/quizappui/src/components/playComponents/gameScreen.js"],"names":["React","useState","useEffect","GameRenderer","ADD_RESPONSE","useMutation","Cookies","QuestionCount","GameScreen","props","triggerMutation","data","progress","setProgress","questionNumber","setQuestionNumber","questionText","setQuestionText","options","setOptions","timer","setTimer","stateData","questions","length","question","optionsArray","optionOne","optionTwo","optionThree","optionFour","showResults","setTimeout","triggerNextQuestion","addResponse","response","variables","ID","get","checkAnswer","optionText","responses","push"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport GameRenderer from \"./gameRenderer\";\nimport {ADD_RESPONSE} from \"../../queries\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport Cookies from 'js-cookie';\nimport './playQuestion.css';\nimport QuestionCount from \"./questionCount\";\n\n//add response array and showResults func in parent\n\nconst GameScreen = (props) => {\n    const [triggerMutation, { data }] = useMutation(ADD_RESPONSE);\n    const [progress, setProgress] = useState(props.progress); //changed count to progress\n    const [questionNumber, setQuestionNumber] = useState(null);\n    const [questionText, setQuestionText] = useState('');\n    const [options, setOptions] = useState([]);\n    const [timer, setTimer] = useState(null);\n\n    useEffect(() => {\n        if (progress < props.stateData.questions.length) {\n            setTimer(20);\n            setQuestionText(props.stateData.questions[progress].question);\n            const optionsArray = [props.stateData.questions[progress].optionOne,\n                props.stateData.questions[progress].optionTwo,\n                props.stateData.questions[progress].optionThree,\n                props.stateData.questions[progress].optionFour];\n            setOptions(optionsArray);\n            setQuestionNumber(progress + 1);\n        }\n        if (progress === props.stateData.questions.length) {\n            props.showResults();\n        }\n    }, [progress]);\n\n    useEffect(() => {\n        if (timer > 0) setTimeout(() => setTimer(timer-1), 1000);\n    }, [timer]);\n\n    const triggerNextQuestion = () => {\n        setProgress(progress + 1);\n    };\n\n    const addResponse = (response) => {\n        triggerMutation({\n            variables : {ID : Cookies.get('user_id'),\n            progress : questionNumber,\n            response : response}\n        });\n    };\n\n\n\n    const checkAnswer = (optionText) => {\n        if (progress < props.stateData.questions.length) {\n            addResponse(optionText);\n            props.responses.push(optionText);\n            setTimeout(() => triggerNextQuestion(), 500);\n        }\n    };\n\n\n    return (\n        <div className={'gameScreen'}>\n            <div className={'questionHead'}>\n                <div className={'questionSubHead'}>\n                    <span className={'questionHeadText'}>Question: </span>\n                    <QuestionCount questionNumber={questionNumber} totalQuestions={props.stateData.questions.length}/>\n                </div>\n                <div className={'timerContainer'}>\n                    <span className={'timerHead'}>Timer</span>\n                    <div className={'timer'}>{timer}</div>\n                    <div className={'timerUnderLine'}></div>\n                </div>\n            </div>\n            <GameRenderer questionText={questionText}\n                          stateData={props.stateData}\n                          questionNumber={questionNumber}\n                          options={options}\n                          progress={progress}\n                          checkAnswer={checkAnswer}\n                          totalQuestions={props.stateData.questions.length} />\n        </div>\n    );\n};\n\nexport default GameScreen;"]},"metadata":{},"sourceType":"module"}