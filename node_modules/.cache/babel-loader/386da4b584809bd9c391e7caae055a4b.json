{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/vm/Desktop/Projects/quizApp/quizappui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    mutation AddStUdentData($ID: String!, $phone: String!, $branch : String!, $year : String!, $college : String!) {\\n        addStudentData(ID: $ID, phone: $phone, year: $year, branch : $branch, college : $college) {\\n            branch\\n        }\\n    }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    mutation AddResponse($ID: String!, $progress: Int!, $response : String!, $points : Int!) {\\n        addResponseLevelThree(ID: $ID, progress: $progress, response: $response, points : $points) {\\n            progress\\n        }\\n    }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    query ($ID : String!)\\n    {\\n        user(ID : $ID)\\n        {\\n            userName,\\n            firstName,\\n            picture,\\n            branch,\\n            lastName,\\n            progress,\\n            points,\\n            pointsLevelTwo,\\n            progressLevelTwo,\\n            pointsLevelThree,\\n            progressLevelThree\\n        },\\n        questions\\n        {\\n            questionID,\\n            question,\\n            time,\\n            haveOptions,\\n            haveImage,\\n            optionOne,\\n            optionTwo,\\n            optionThree,\\n            optionFour,\\n            correctOption\\n        }\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import gql from'graphql-tag';export var GET_QUERY=gql(_templateObject());export var ADD_RESPONSE=gql(_templateObject2());export var ADD_STUDENT_DATA=gql(_templateObject3());","map":{"version":3,"sources":["/home/vm/Desktop/Projects/quizApp/quizappui/src/queries.js"],"names":["gql","GET_QUERY","ADD_RESPONSE","ADD_STUDENT_DATA"],"mappings":"8sDAAA,MAAOA,CAAAA,GAAP,KAAgB,aAAhB,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAGD,GAAH,mBAAf,CAiCP,MAAO,IAAME,CAAAA,YAAY,CAAGF,GAAH,oBAAlB,CAQP,MAAO,IAAMG,CAAAA,gBAAgB,CAAGH,GAAH,oBAAtB","sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_QUERY = gql`\n    query ($ID : String!)\n    {\n        user(ID : $ID)\n        {\n            userName,\n            firstName,\n            picture,\n            branch,\n            lastName,\n            progress,\n            points,\n            pointsLevelTwo,\n            progressLevelTwo,\n            pointsLevelThree,\n            progressLevelThree\n        },\n        questions\n        {\n            questionID,\n            question,\n            time,\n            haveOptions,\n            haveImage,\n            optionOne,\n            optionTwo,\n            optionThree,\n            optionFour,\n            correctOption\n        }\n    }\n`;\n\nexport const ADD_RESPONSE = gql`\n    mutation AddResponse($ID: String!, $progress: Int!, $response : String!, $points : Int!) {\n        addResponseLevelThree(ID: $ID, progress: $progress, response: $response, points : $points) {\n            progress\n        }\n    }\n`;\n\nexport const ADD_STUDENT_DATA = gql`\n    mutation AddStUdentData($ID: String!, $phone: String!, $branch : String!, $year : String!, $college : String!) {\n        addStudentData(ID: $ID, phone: $phone, year: $year, branch : $branch, college : $college) {\n            branch\n        }\n    }\n`;"]},"metadata":{},"sourceType":"module"}