{"ast":null,"code":"import _slicedToArray from\"/home/vm/Desktop/quizApp/quizappui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Redirect}from'react-router-dom';import GameScreen from'./gameScreen';import'./playStart.css';import'../homeComponents/home.css';import'./playQuestion.css';import Result from\"./result\";var DynamicGameArea=function DynamicGameArea(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),startClicked=_useState2[0],setStartClicked=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showResultState=_useState4[0],setShowResultState=_useState4[1];var points=props.stateData.points;console.log(props.stateData);console.log(props.stateData.progress);console.log(props.stateData.points);var showResults=function showResults(){setShowResultState(true);};if(props.stateData.progress===props.stateData.questions.length){return/*#__PURE__*/React.createElement(Result,{points:points});}if(!startClicked){return/*#__PURE__*/React.createElement(\"div\",{className:'gameArea'},/*#__PURE__*/React.createElement(\"p\",{className:'start-text'},\"You are ready to go\"),/*#__PURE__*/React.createElement(\"div\",{className:'start-underLine'}),/*#__PURE__*/React.createElement(\"div\",{className:'button start-button',onClick:function onClick(){return setStartClicked(true);}},\"Start Game\"));}if(showResultState){return/*#__PURE__*/React.createElement(Result,{points:points});}return/*#__PURE__*/React.createElement(GameScreen,{stateData:props.stateData,points:points,showResults:showResults,progress:props.stateData.progress});};export default DynamicGameArea;","map":{"version":3,"sources":["/home/vm/Desktop/quizApp/quizappui/src/components/playComponents/dynamicGameArea.js"],"names":["React","useEffect","useState","Redirect","GameScreen","Result","DynamicGameArea","props","startClicked","setStartClicked","showResultState","setShowResultState","points","stateData","console","log","progress","showResults","questions","length"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAAQC,QAAR,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAO,iBAAP,CACA,MAAO,4BAAP,CACA,MAAO,oBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,eAESL,QAAQ,CAAC,KAAD,CAFjB,wCAExBM,YAFwB,eAEVC,eAFU,8BAGeP,QAAQ,CAAC,KAAD,CAHvB,yCAGxBQ,eAHwB,eAGPC,kBAHO,eAI/B,GAAMC,CAAAA,MAAM,CAAGL,KAAK,CAACM,SAAN,CAAgBD,MAA/B,CACAE,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACM,SAAlB,EACAC,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACM,SAAN,CAAgBG,QAA5B,EACAF,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACM,SAAN,CAAgBD,MAA5B,EAGA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBN,kBAAkB,CAAC,IAAD,CAAlB,CACH,CAFD,CAGA,GAAIJ,KAAK,CAACM,SAAN,CAAgBG,QAAhB,GAA6BT,KAAK,CAACM,SAAN,CAAgBK,SAAhB,CAA0BC,MAA3D,CAAkE,CAC9D,mBAAO,oBAAC,MAAD,EAAQ,MAAM,CAAEP,MAAhB,EAAP,CACH,CAED,GAAI,CAACJ,YAAL,CAAkB,CACd,mBACI,2BAAK,SAAS,CAAE,UAAhB,eACI,yBAAG,SAAS,CAAE,YAAd,wBADJ,cAEI,2BAAK,SAAS,CAAE,iBAAhB,EAFJ,cAGI,2BAAK,SAAS,CAAE,qBAAhB,CAAuC,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAAC,IAAD,CAArB,EAAhD,eAHJ,CADJ,CAOH,CACD,GAAIC,eAAJ,CAAqB,CACjB,mBAAO,oBAAC,MAAD,EAAQ,MAAM,CAAEE,MAAhB,EAAP,CACH,CACD,mBAAO,oBAAC,UAAD,EAAY,SAAS,CAAIL,KAAK,CAACM,SAA/B,CAA0C,MAAM,CAAED,MAAlD,CAA0D,WAAW,CAAEK,WAAvE,CAAoF,QAAQ,CAAEV,KAAK,CAACM,SAAN,CAAgBG,QAA9G,EAAP,CACH,CA9BD,CAiCA,cAAeV,CAAAA,eAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Redirect}  from 'react-router-dom';\nimport GameScreen from './gameScreen';\nimport './playStart.css';\nimport '../homeComponents/home.css';\nimport './playQuestion.css';\nimport Result from \"./result\";\n\nconst DynamicGameArea = (props) => {\n\n    const [startClicked, setStartClicked] = useState(false);\n    const [showResultState, setShowResultState] = useState(false);\n    const points = props.stateData.points;\n    console.log(props.stateData);\n    console.log(props.stateData.progress);\n    console.log(props.stateData.points);\n\n\n    const showResults = () => {\n        setShowResultState(true);\n    };\n    if (props.stateData.progress === props.stateData.questions.length){\n        return <Result points={points} />;\n    }\n\n    if (!startClicked){\n        return (\n            <div className={'gameArea'}>\n                <p className={'start-text'}>You are ready to go</p>\n                <div className={'start-underLine'}></div>\n                <div className={'button start-button'} onClick={() => setStartClicked(true)}>Start Game</div>\n            </div>\n       );\n    }\n    if (showResultState) {\n        return <Result points={points} />;\n    }\n    return <GameScreen stateData = {props.stateData} points={points} showResults={showResults} progress={props.stateData.progress} />;\n};\n\n\nexport default DynamicGameArea;\n"]},"metadata":{},"sourceType":"module"}