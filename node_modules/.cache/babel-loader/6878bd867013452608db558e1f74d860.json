{"ast":null,"code":"import _slicedToArray from\"/home/vm/Desktop/quizApp/quizappui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/vm/Desktop/quizApp/quizappui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    mutation($ID : String!, $response : Int!, $questionID : Int!)\\n    {\\n        addRespose(ID : $ID, response : $response, progress : $questionID)\\n        {\\n            ID,\\n            response,\\n            progress\\n        }\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useState}from'react';import{useMutation}from'@apollo/react-hooks';import gql from'graphql-tag';import Cookies from'js-cookie';import'./playStart.css';import'../homeComponents/home.css';var ADD_RESPONSE=gql(_templateObject());var GameQuestionRenderer=function GameQuestionRenderer(props){var _useMutation=useMutation(ADD_RESPONSE),_useMutation2=_slicedToArray(_useMutation,1),sendResponse=_useMutation2[0];var classOptionOne={};var classOptionTwo={};var classOptionThree={};var classOptionFour={};var ID=Cookies.get('user_id');var checkAnswer=function checkAnswer(response,responseText,questionID){sendResponse({variables:{ID:ID,progress:questionID,response:response}}).then(function(){return console.log('response_sent');}).catch(function(err){return console.log(err);});switch(response){case 1:if(responseText===props.question.correctOption){classOptionOne.backgroundColor='green';}else{classOptionOne.backgroundColor='red';}break;case 2:if(responseText===props.question.correctOption){classOptionTwo.backgroundColor='green';}else{classOptionTwo.backgroundColor='red';}break;case 3:if(responseText===props.question.correctOption){classOptionThree.backgroundColor='green';}else{classOptionThree.backgroundColor='red';}break;case 4:if(responseText===props.question.correctOption){classOptionFour.backgroundColor='green';}else{classOptionFour.backgroundColor='red';}break;}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{className:'questionText'},props.question.question),props.question.imagePath?/*#__PURE__*/React.createElement(\"img\",{src:props.question.imagePath,className:'questionImage'}):null,/*#__PURE__*/React.createElement(\"div\",{className:'questionOptions'},/*#__PURE__*/React.createElement(\"div\",{style:classOptionOne,onCliclk:function onCliclk(){return checkAnswer(1,props.question.optionOne,props.question.questionID);}},props.question.optionOne),/*#__PURE__*/React.createElement(\"div\",{style:classOptionTwo,onClick:function onClick(){return checkAnswer(2,props.question.optionTwo,props.question.questionID);}},props.question.optionTwo),/*#__PURE__*/React.createElement(\"div\",{style:classOptionThree,onClick:function onClick(){return checkAnswer(3,props.question.optionThree,props.question.questionID);}},props.question.optionThree),/*#__PURE__*/React.createElement(\"div\",{style:classOptionFour,onClick:function onClick(){return checkAnswer(4,props.question.optionFour,props.question.questionID);}},props.question.optionFour)));};var ShowTimeOut=function ShowTimeOut(props){return/*#__PURE__*/React.createElement(\"div\",{className:'timeOut'},/*#__PURE__*/React.createElement(\"span\",{className:'timeOutHead'},\"Time Out..!!\"),/*#__PURE__*/React.createElement(\"p\",{className:'timeOutText'},\"Next question in \",props.time));};var QuestionRender;var GameScreen=function GameScreen(props){var questions=props.stateData.questions;console.log(props);var _useState=useState(20),_useState2=_slicedToArray(_useState,2),questionTimerVal=_useState2[0],setQuestionTimerVal=_useState2[1];if(questions.length>0){if(questionTimerVal>0){questions.map(function(questionObject){setInterval(function(){setQuestionTimerVal(questionTimerVal-1);},1000);QuestionRender=/*#__PURE__*/React.createElement(GameQuestionRenderer,{question:questionObject});});}else{var timeOutTimeVal=3;setInterval(function(){QuestionRender=/*#__PURE__*/React.createElement(ShowTimeOut,{time:timeOutTimeVal--});},1000);}}return/*#__PURE__*/React.createElement(\"div\",{className:'gameScreen'},/*#__PURE__*/React.createElement(\"div\",{className:'questionHeadAndTitle'},/*#__PURE__*/React.createElement(\"h2\",{className:'questionTitle'},\"Question: \"),/*#__PURE__*/React.createElement(\"div\",{className:'questionTimer'},questionTimerVal)),/*#__PURE__*/React.createElement(\"div\",null,QuestionRender));};var DynamicGameArea=function DynamicGameArea(props){var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),startClicked=_useState4[0],setStartClicked=_useState4[1];if(!startClicked){return/*#__PURE__*/React.createElement(\"div\",{className:'gameArea'},/*#__PURE__*/React.createElement(\"p\",{className:'start-text'},\"You are ready to go\"),/*#__PURE__*/React.createElement(\"div\",{className:'start-underLine'}),/*#__PURE__*/React.createElement(\"div\",{className:'button start-button',onClick:function onClick(){return setStartClicked(true);}},\"Start Game\"));}return/*#__PURE__*/React.createElement(GameScreen,{stateData:props.stateData});};export default DynamicGameArea;","map":{"version":3,"sources":["/home/vm/Desktop/quizApp/quizappui/src/components/playComponents/dynamicGameArea.js"],"names":["React","useEffect","useState","useMutation","gql","Cookies","ADD_RESPONSE","GameQuestionRenderer","props","sendResponse","classOptionOne","classOptionTwo","classOptionThree","classOptionFour","ID","get","checkAnswer","response","responseText","questionID","variables","progress","then","console","log","catch","err","question","correctOption","backgroundColor","imagePath","optionOne","optionTwo","optionThree","optionFour","ShowTimeOut","time","QuestionRender","GameScreen","questions","stateData","questionTimerVal","setQuestionTimerVal","length","map","questionObject","setInterval","timeOutTimeVal","DynamicGameArea","startClicked","setStartClicked"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useMutation} from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Cookies from 'js-cookie';\nimport './playStart.css';\nimport '../homeComponents/home.css';\n\nconst ADD_RESPONSE = gql`\n    mutation($ID : String!, $response : Int!, $questionID : Int!)\n    {\n        addRespose(ID : $ID, response : $response, progress : $questionID)\n        {\n            ID,\n            response,\n            progress\n        }\n    }\n`;\n\n\nconst GameQuestionRenderer = (props) => {\n    const [sendResponse] = useMutation(ADD_RESPONSE);\n    const classOptionOne = {};\n    const classOptionTwo = {};\n    const classOptionThree = {};\n    const classOptionFour = {};\n    const ID = Cookies.get('user_id');\n\n    const checkAnswer = (response, responseText, questionID) => {\n        sendResponse({\n            variables : {ID, progress : questionID, response}\n        }).then(() => console.log('response_sent')).catch((err) => console.log(err));\n\n        switch (response) {\n            case 1:\n                if (responseText === props.question.correctOption) {\n                    classOptionOne.backgroundColor = 'green';\n                }\n                else {\n                    classOptionOne.backgroundColor = 'red';\n                }\n                break;\n            case 2:\n                if (responseText === props.question.correctOption) {\n                    classOptionTwo.backgroundColor = 'green';\n                }\n                else {\n                    classOptionTwo.backgroundColor = 'red';\n                }\n                break;\n            case 3:\n                if (responseText === props.question.correctOption) {\n                    classOptionThree.backgroundColor = 'green';\n                }\n                else {\n                    classOptionThree.backgroundColor = 'red';\n                }\n                break;\n            case 4:\n                if (responseText === props.question.correctOption) {\n                    classOptionFour.backgroundColor = 'green';\n                }\n                else {\n                    classOptionFour.backgroundColor = 'red';\n                }\n                break;\n        }\n\n    };\n    return (\n            <div>\n                <p className={'questionText'}>{props.question.question}</p>\n                {(props.question.imagePath) ? <img src={props.question.imagePath} className={'questionImage'} /> : null}\n                <div className={'questionOptions'}>\n                    <div style={classOptionOne} onCliclk={() => checkAnswer(1, props.question.optionOne, props.question.questionID)}>{props.question.optionOne}</div>\n                    <div style={classOptionTwo} onClick={() => checkAnswer(2, props.question.optionTwo, props.question.questionID)}>{props.question.optionTwo}</div>\n                    <div style={classOptionThree} onClick={() => checkAnswer(3, props.question.optionThree, props.question.questionID)}>{props.question.optionThree}</div>\n                    <div style={classOptionFour} onClick={() => checkAnswer(4, props.question.optionFour, props.question.questionID)}>{props.question.optionFour}</div>\n                </div>\n            </div>\n    );\n};\n\nconst ShowTimeOut = (props) => {\n    return (\n        <div className={'timeOut'}>\n            <span className={'timeOutHead'}>Time Out..!!</span>\n            <p className={'timeOutText'}>Next question in {props.time}</p>\n        </div>\n    );\n};\n\n\nlet QuestionRender;\nconst GameScreen = (props) => {\n    const questions = props.stateData.questions;\n    console.log(props);\n    const [questionTimerVal, setQuestionTimerVal] = useState(20);\n    if (questions.length > 0){\n        if (questionTimerVal > 0) {\n            questions.map((questionObject) => {\n                setInterval(() => {setQuestionTimerVal(questionTimerVal-1)}, 1000);\n                QuestionRender = <GameQuestionRenderer question = {questionObject} />;\n            });\n        }\n        else {\n            let timeOutTimeVal = 3;\n            setInterval(() => {\n                QuestionRender =  <ShowTimeOut time={timeOutTimeVal--}/>;\n            }, 1000);\n        }\n    }\n    return(\n        <div className={'gameScreen'}>\n            <div className={'questionHeadAndTitle'}>\n                <h2 className={'questionTitle'}>Question: </h2>\n                <div className={'questionTimer'}>{questionTimerVal}</div>\n            </div>\n            <div>\n            {QuestionRender}\n            </div>\n        </div>\n    );\n};\n\n\nconst DynamicGameArea = (props) => {\n    const [startClicked, setStartClicked] = useState(false);\n    if (!startClicked){\n        return (\n            <div className={'gameArea'}>\n                <p className={'start-text'}>You are ready to go</p>\n                <div className={'start-underLine'}></div>\n                <div className={'button start-button'} onClick={() => setStartClicked(true)}>Start Game</div>\n            </div>\n       );\n    }\n    return <GameScreen stateData = {props.stateData} />;\n};\n\n\nexport default DynamicGameArea;\n"]},"metadata":{},"sourceType":"module"}