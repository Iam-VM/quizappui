{"ast":null,"code":"import _slicedToArray from\"/home/vm/Desktop/quizApp/quizappui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./playStart.css';import'../homeComponents/home.css';import{connect}from'react-redux';import{mapDispatchToProps,mapStateToProps}from\"../../utils/mapReduxToState\";var ConnectedGameScreen=function ConnectedGameScreen(props){return/*#__PURE__*/React.createElement(\"div\",{className:'gameArea-question-render'},/*#__PURE__*/React.createElement(\"h2\",{className:'question-title'},\"Question: \"));};var GameScreen=connect(mapStateToProps)(ConnectedGameScreen);var ConnectedDynamicGameArea=function ConnectedDynamicGameArea(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),startClicked=_useState2[0],setStartClicked=_useState2[1];if(!startClicked){return/*#__PURE__*/React.createElement(\"div\",{className:'gameArea'},/*#__PURE__*/React.createElement(\"p\",{className:'start-text'},\"You are ready to go\"),/*#__PURE__*/React.createElement(\"div\",{className:'start-underLine'}),/*#__PURE__*/React.createElement(\"div\",{className:'button start-button',onClick:function onClick(){return setStartClicked(true);}},\"Start Game\"));}return/*#__PURE__*/React.createElement(GameScreen,null);};var DynamicGameArea=connect(mapStateToProps,mapDispatchToProps)(ConnectedDynamicGameArea);export default DynamicGameArea;","map":{"version":3,"sources":["/home/vm/Desktop/quizApp/quizappui/src/components/playComponents/dynamicGameArea.js"],"names":["React","useState","connect","mapDispatchToProps","mapStateToProps","ConnectedGameScreen","props","GameScreen","ConnectedDynamicGameArea","startClicked","setStartClicked","DynamicGameArea"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,iBAAP,CACA,MAAO,4BAAP,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAASC,kBAAT,CAA6BC,eAA7B,KAAoD,6BAApD,CAIA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAW,CACnC,mBACI,2BAAK,SAAS,CAAE,0BAAhB,eACI,0BAAI,SAAS,CAAE,gBAAf,eADJ,CADJ,CAKH,CAND,CAQA,GAAMC,CAAAA,UAAU,CAAGL,OAAO,CAACE,eAAD,CAAP,CAAyBC,mBAAzB,CAAnB,CAEA,GAAMG,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACF,KAAD,CAAW,eACAL,QAAQ,CAAC,KAAD,CADR,wCACjCQ,YADiC,eACnBC,eADmB,eAExC,GAAI,CAACD,YAAL,CAAkB,CACd,mBACI,2BAAK,SAAS,CAAE,UAAhB,eACI,yBAAG,SAAS,CAAE,YAAd,wBADJ,cAEI,2BAAK,SAAS,CAAE,iBAAhB,EAFJ,cAGI,2BAAK,SAAS,CAAE,qBAAhB,CAAuC,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAAC,IAAD,CAArB,EAAhD,eAHJ,CADJ,CAOH,CACD,mBAAO,oBAAC,UAAD,MAAP,CACH,CAZD,CAcA,GAAMC,CAAAA,eAAe,CAAGT,OAAO,CAACE,eAAD,CAAkBD,kBAAlB,CAAP,CAA6CK,wBAA7C,CAAxB,CACA,cAAeG,CAAAA,eAAf","sourcesContent":["import React, {useState} from 'react';\nimport './playStart.css';\nimport '../homeComponents/home.css';\nimport {connect} from 'react-redux';\nimport { mapDispatchToProps, mapStateToProps } from \"../../utils/mapReduxToState\";\n\n\n\nconst ConnectedGameScreen = (props) => {\n    return(\n        <div className={'gameArea-question-render'}>\n            <h2 className={'question-title'}>Question: </h2>\n        </div>\n    );\n};\n\nconst GameScreen = connect(mapStateToProps)(ConnectedGameScreen);\n\nconst ConnectedDynamicGameArea = (props) => {\n    const [startClicked, setStartClicked] = useState(false);\n    if (!startClicked){\n        return (\n            <div className={'gameArea'}>\n                <p className={'start-text'}>You are ready to go</p>\n                <div className={'start-underLine'}></div>\n                <div className={'button start-button'} onClick={() => setStartClicked(true)}>Start Game</div>\n            </div>\n        );\n    }\n    return <GameScreen />;\n};\n\nconst DynamicGameArea = connect(mapStateToProps, mapDispatchToProps)(ConnectedDynamicGameArea);\nexport default DynamicGameArea;\n"]},"metadata":{},"sourceType":"module"}