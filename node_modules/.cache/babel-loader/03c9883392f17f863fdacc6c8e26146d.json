{"ast":null,"code":"import _objectSpread from\"/home/vm/Desktop/quizApp/quizappui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"/home/vm/Desktop/quizApp/quizappui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    query ($ID : String!)\\n    {\\n        user(id : $ID)\\n        {\\n            userName,\\n            firstName,\\n            lastName,\\n            picture,\\n            email,\\n            progress\\n        },\\n        questions\\n        {\\n            questionID,\\n            question,\\n            optionOne,\\n            optionTwo,\\n            optionThree,\\n            optionFour,\\n            correctOption\\n        }\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{connect}from'react-redux';import'./playComponents/playStart.css';import DynamicGameArea from'./playComponents/dynamicGameArea';import{useQuery}from'@apollo/react-hooks';import gql from'graphql-tag';import Cookies from'js-cookie';import{mapDispatchToProps,mapStateToProps}from\"../utils/mapReduxToState\";var getQuery=gql(_templateObject());var ConnectedPlay=function ConnectedPlay(props){useEffect(function(){var ID=Cookies.get('user_id');var _useQuery=useQuery(getQuery,{variables:{ID:ID}}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;if(error){return/*#__PURE__*/React.createElement(\"p\",null,\"Error occured: \".concat(error));}if(loading){return/*#__PURE__*/React.createElement(\"p\",null,\"loading...\");}var receivedData=_objectSpread({},data.user);receivedData.questions=data.questions;delete receivedData.__typename;delete receivedData.__proto__;delete receivedData.questions.__typename;delete receivedData.questions.__proto__;props.addState(receivedData);});return/*#__PURE__*/React.createElement(\"div\",{className:'play'},/*#__PURE__*/React.createElement(\"div\",{className:'navBar'},/*#__PURE__*/React.createElement(Link,{to:'/',className:'navBar-logo'},/*#__PURE__*/React.createElement(\"span\",null,\"Salvos\")),/*#__PURE__*/React.createElement(\"span\",{className:'helloName'},\"Hello, \".concat(props.state.firstName||\"...\"))),/*#__PURE__*/React.createElement(DynamicGameArea,{className:'dynamicGameArea'}));};var Play=connect(mapStateToProps,mapDispatchToProps)(ConnectedPlay);export default Play;","map":{"version":3,"sources":["/home/vm/Desktop/quizApp/quizappui/src/components/play.js"],"names":["React","useState","useEffect","Link","connect","DynamicGameArea","useQuery","gql","Cookies","mapDispatchToProps","mapStateToProps","getQuery","ConnectedPlay","props","ID","get","variables","loading","error","data","receivedData","user","questions","__typename","__proto__","addState","state","firstName","Play"],"mappings":"+3BAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAO,gCAAP,CACA,MAAOC,CAAAA,eAAP,KAA4B,kCAA5B,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,kBAAT,CAA6BC,eAA7B,KAAoD,0BAApD,CAGA,GAAMC,CAAAA,QAAQ,CAAGJ,GAAH,mBAAd,CA0BA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC7BX,SAAS,CAAC,UAAM,CACZ,GAAMY,CAAAA,EAAE,CAAGN,OAAO,CAACO,GAAR,CAAY,SAAZ,CAAX,CADY,cAEmBT,QAAQ,CAACK,QAAD,CAAW,CAC9CK,SAAS,CAAG,CAACF,EAAE,CAAFA,EAAD,CADkC,CAAX,CAF3B,CAELG,OAFK,WAELA,OAFK,CAEIC,KAFJ,WAEIA,KAFJ,CAEWC,IAFX,WAEWA,IAFX,CAKZ,GAAID,KAAJ,CAAW,CACP,mBAAS,sDAAsBA,KAAtB,EAAT,CACH,CACD,GAAID,OAAJ,CAAa,CACT,mBAAS,0CAAT,CACH,CACD,GAAMG,CAAAA,YAAY,kBAAOD,IAAI,CAACE,IAAZ,CAAlB,CACAD,YAAY,CAACE,SAAb,CAAyBH,IAAI,CAACG,SAA9B,CACA,MAAOF,CAAAA,YAAY,CAACG,UAApB,CACA,MAAOH,CAAAA,YAAY,CAACI,SAApB,CACA,MAAOJ,CAAAA,YAAY,CAACE,SAAb,CAAuBC,UAA9B,CACA,MAAOH,CAAAA,YAAY,CAACE,SAAb,CAAuBE,SAA9B,CACAX,KAAK,CAACY,QAAN,CAAeL,YAAf,EACH,CAlBQ,CAAT,CAmBA,mBACI,2BAAK,SAAS,CAAE,MAAhB,eACI,2BAAK,SAAS,CAAE,QAAhB,eACI,oBAAC,IAAD,EAAM,EAAE,CAAE,GAAV,CAAe,SAAS,CAAE,aAA1B,eACI,yCADJ,CADJ,cAII,4BAAM,SAAS,CAAE,WAAjB,mBACeP,KAAK,CAACa,KAAN,CAAYC,SAAZ,OADf,EAJJ,CADJ,cASI,oBAAC,eAAD,EAAiB,SAAS,CAAE,iBAA5B,EATJ,CADJ,CAaH,CAjCD,CAmCA,GAAMC,CAAAA,IAAI,CAAGxB,OAAO,CAACM,eAAD,CAAkBD,kBAAlB,CAAP,CAA6CG,aAA7C,CAAb,CACA,cAAegB,CAAAA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport './playComponents/playStart.css';\nimport DynamicGameArea from './playComponents/dynamicGameArea';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Cookies from 'js-cookie';\nimport { mapDispatchToProps, mapStateToProps } from \"../utils/mapReduxToState\";\n\n\nconst getQuery = gql`\n    query ($ID : String!)\n    {\n        user(id : $ID)\n        {\n            userName,\n            firstName,\n            lastName,\n            picture,\n            email,\n            progress\n        },\n        questions\n        {\n            questionID,\n            question,\n            optionOne,\n            optionTwo,\n            optionThree,\n            optionFour,\n            correctOption\n        }\n    }\n`;\n\n\nconst ConnectedPlay = (props) => {\n    useEffect(() => {\n        const ID = Cookies.get('user_id');\n        const {loading, error, data} = useQuery(getQuery, {\n            variables : {ID}\n        });\n        if (error) {\n            return  (<p>{`Error occured: ${error}`}</p>);\n        }\n        if (loading) {\n            return  (<p>loading...</p>);\n        }\n        const receivedData = {...data.user};\n        receivedData.questions = data.questions;\n        delete receivedData.__typename;\n        delete receivedData.__proto__;\n        delete receivedData.questions.__typename;\n        delete receivedData.questions.__proto__;\n        props.addState(receivedData);\n    });\n    return(\n        <div className={'play'}>\n            <div className={'navBar'}>\n                <Link to={'/'} className={'navBar-logo'}>\n                    <span>Salvos</span>\n                </Link>\n                <span className={'helloName'}>\n                    {`Hello, ${props.state.firstName || `...`}`}\n                </span>\n            </div>\n            <DynamicGameArea className={'dynamicGameArea'}/>\n        </div>\n    );\n};\n\nconst Play = connect(mapStateToProps, mapDispatchToProps)(ConnectedPlay);\nexport default Play;"]},"metadata":{},"sourceType":"module"}