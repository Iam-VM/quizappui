{"ast":null,"code":"import _slicedToArray from\"/home/vm/Desktop/quizApp/quizappui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import GameRenderer from\"./gameRenderer\";import{ADD_RESPONSE}from\"../../queries\";import{useMutation}from\"@apollo/react-hooks\";import Cookies from'js-cookie';//add response array and showResults func in parent\nvar GameScreen=function GameScreen(props){var _useMutation=useMutation(ADD_RESPONSE),_useMutation2=_slicedToArray(_useMutation,2),triggerMutation=_useMutation2[0],data=_useMutation2[1].data;var _useState=useState(props.progress),_useState2=_slicedToArray(_useState,2),counter=_useState2[0],setCounter=_useState2[1];var _useState3=useState(props.progress+1),_useState4=_slicedToArray(_useState3,2),questionNumber=_useState4[0],setQuestionNumber=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),questionText=_useState6[0],setQuestionText=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),options=_useState8[0],setOptions=_useState8[1];useEffect(function(){setQuestionText(props.stateData.questions[counter].question);var optionsArray=[props.stateData.questions[counter].optionOne,props.stateData.questions[counter].optionTwo,props.stateData.questions[counter].optionThree,props.stateData.questions[counter].optionFour];setOptions(optionsArray);},[]);var triggerNextQuestion=function triggerNextQuestion(){setCounter(counter+1);setQuestionNumber(questionNumber+1);setQuestionText(props.stateData.questions[counter].question);var optionsArray=[props.stateData.questions[counter].optionOne,props.stateData.questions[counter].optionTwo,props.stateData.questions[counter].optionThree,props.stateData.questions[counter].optionFour];setOptions(optionsArray);};var addResponse=function addResponse(response){triggerMutation({variables:{ID:Cookies.get('user_id'),progress:questionNumber,response:response}});};var checkAnswer=function checkAnswer(e){addResponse(e.currentTarget.value);props.responses.push(e.currentTarget.value);if(e.currentTarget.value===''){setTimeout(function(){return showTimeOut();},500);if(questionNumber<props.stateData.questions.length){setTimeout(function(){return triggerNextQuestion();},500);}else{setTimeout(function(){return props.showResults();},500);}}if(questionNumber<props.stateData.questions.length){setTimeout(function(){return triggerNextQuestion();},500);}else{setTimeout(function(){return props.showResults();},500);}};return/*#__PURE__*/React.createElement(\"div\",{className:'gameScreen'},/*#__PURE__*/React.createElement(GameRenderer,{questionText:questionText,stateData:props.stateData,questionNumber:questionNumber,options:options,checkAnswer:checkAnswer,totalQuestions:props.stateData.questions.length}));};export default GameScreen;","map":{"version":3,"sources":["/home/vm/Desktop/quizApp/quizappui/src/components/playComponents/gameScreen.js"],"names":["React","useState","useEffect","GameRenderer","ADD_RESPONSE","useMutation","Cookies","GameScreen","props","triggerMutation","data","progress","counter","setCounter","questionNumber","setQuestionNumber","questionText","setQuestionText","options","setOptions","stateData","questions","question","optionsArray","optionOne","optionTwo","optionThree","optionFour","triggerNextQuestion","addResponse","response","variables","ID","get","checkAnswer","e","currentTarget","value","responses","push","setTimeout","showTimeOut","length","showResults"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAAQC,YAAR,KAA2B,eAA3B,CACA,OAAQC,WAAR,KAA0B,qBAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA;AAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,kBACUH,WAAW,CAACD,YAAD,CADrB,8CACnBK,eADmB,kBACAC,IADA,kBACAA,IADA,eAEIT,QAAQ,CAACO,KAAK,CAACG,QAAP,CAFZ,wCAEnBC,OAFmB,eAEVC,UAFU,8BAGkBZ,QAAQ,CAACO,KAAK,CAACG,QAAN,CAAiB,CAAlB,CAH1B,yCAGnBG,cAHmB,eAGHC,iBAHG,8BAIcd,QAAQ,CAAC,EAAD,CAJtB,yCAInBe,YAJmB,eAILC,eAJK,8BAKIhB,QAAQ,CAAC,EAAD,CALZ,yCAKnBiB,OALmB,eAKVC,UALU,eAO1BjB,SAAS,CAAC,UAAM,CACZe,eAAe,CAACT,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BT,OAA1B,EAAmCU,QAApC,CAAf,CACA,GAAMC,CAAAA,YAAY,CAAG,CAACf,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BT,OAA1B,EAAmCY,SAApC,CACjBhB,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BT,OAA1B,EAAmCa,SADlB,CAEjBjB,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BT,OAA1B,EAAmCc,WAFlB,CAGjBlB,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BT,OAA1B,EAAmCe,UAHlB,CAArB,CAIAR,UAAU,CAACI,YAAD,CAAV,CACH,CAPQ,CAON,EAPM,CAAT,CASA,GAAMK,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9Bf,UAAU,CAACD,OAAO,CAAG,CAAX,CAAV,CACAG,iBAAiB,CAACD,cAAc,CAAG,CAAlB,CAAjB,CACAG,eAAe,CAACT,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BT,OAA1B,EAAmCU,QAApC,CAAf,CACA,GAAMC,CAAAA,YAAY,CAAG,CAACf,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BT,OAA1B,EAAmCY,SAApC,CACjBhB,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BT,OAA1B,EAAmCa,SADlB,CAEjBjB,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BT,OAA1B,EAAmCc,WAFlB,CAGjBlB,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BT,OAA1B,EAAmCe,UAHlB,CAArB,CAIAR,UAAU,CAACI,YAAD,CAAV,CACH,CATD,CAWA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAAc,CAC9BrB,eAAe,CAAC,CACZsB,SAAS,CAAG,CAACC,EAAE,CAAG1B,OAAO,CAAC2B,GAAR,CAAY,SAAZ,CAAN,CACZtB,QAAQ,CAAGG,cADC,CAEZgB,QAAQ,CAAGA,QAFC,CADA,CAAD,CAAf,CAKH,CAND,CAUA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CACvBN,WAAW,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAX,CACA7B,KAAK,CAAC8B,SAAN,CAAgBC,IAAhB,CAAqBJ,CAAC,CAACC,aAAF,CAAgBC,KAArC,EACA,GAAIF,CAAC,CAACC,aAAF,CAAgBC,KAAhB,GAA0B,EAA9B,CAAiC,CAC7BG,UAAU,CAAC,iBAAMC,CAAAA,WAAW,EAAjB,EAAD,CAAsB,GAAtB,CAAV,CACA,GAAI3B,cAAc,CAAGN,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BqB,MAA/C,CAAsD,CAClDF,UAAU,CAAC,iBAAMZ,CAAAA,mBAAmB,EAAzB,EAAD,CAA8B,GAA9B,CAAV,CACH,CAFD,IAGK,CACDY,UAAU,CAAC,iBAAMhC,CAAAA,KAAK,CAACmC,WAAN,EAAN,EAAD,CAA4B,GAA5B,CAAV,CACH,CACJ,CACD,GAAI7B,cAAc,CAAGN,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BqB,MAA/C,CAAsD,CAClDF,UAAU,CAAC,iBAAMZ,CAAAA,mBAAmB,EAAzB,EAAD,CAA8B,GAA9B,CAAV,CACH,CAFD,IAGK,CACDY,UAAU,CAAC,iBAAMhC,CAAAA,KAAK,CAACmC,WAAN,EAAN,EAAD,CAA4B,GAA5B,CAAV,CACH,CACJ,CAlBD,CAoBA,mBACI,2BAAK,SAAS,CAAE,YAAhB,eACI,oBAAC,YAAD,EAAc,YAAY,CAAE3B,YAA5B,CACc,SAAS,CAAER,KAAK,CAACY,SAD/B,CAEc,cAAc,CAAEN,cAF9B,CAGc,OAAO,CAAEI,OAHvB,CAIc,WAAW,CAAEgB,WAJ3B,CAKc,cAAc,CAAE1B,KAAK,CAACY,SAAN,CAAgBC,SAAhB,CAA0BqB,MALxD,EADJ,CADJ,CAUH,CAnED,CAqEA,cAAenC,CAAAA,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport GameRenderer from \"./gameRenderer\";\nimport {ADD_RESPONSE} from \"../../queries\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport Cookies from 'js-cookie';\n\n//add response array and showResults func in parent\n\nconst GameScreen = (props) => {\n    const [triggerMutation, { data }] = useMutation(ADD_RESPONSE);\n    const [counter, setCounter] = useState(props.progress);\n    const [questionNumber, setQuestionNumber] = useState(props.progress + 1);\n    const [questionText, setQuestionText] = useState('');\n    const [options, setOptions] = useState([]);\n\n    useEffect(() => {\n        setQuestionText(props.stateData.questions[counter].question);\n        const optionsArray = [props.stateData.questions[counter].optionOne,\n            props.stateData.questions[counter].optionTwo,\n            props.stateData.questions[counter].optionThree,\n            props.stateData.questions[counter].optionFour];\n        setOptions(optionsArray);\n    }, []);\n\n    const triggerNextQuestion = () => {\n        setCounter(counter + 1);\n        setQuestionNumber(questionNumber + 1);\n        setQuestionText(props.stateData.questions[counter].question);\n        const optionsArray = [props.stateData.questions[counter].optionOne,\n            props.stateData.questions[counter].optionTwo,\n            props.stateData.questions[counter].optionThree,\n            props.stateData.questions[counter].optionFour];\n        setOptions(optionsArray);\n    };\n\n    const addResponse = (response) => {\n        triggerMutation({\n            variables : {ID : Cookies.get('user_id'),\n            progress : questionNumber,\n            response : response}\n        });\n    };\n\n\n\n    const checkAnswer = (e) => {\n        addResponse(e.currentTarget.value);\n        props.responses.push(e.currentTarget.value);\n        if (e.currentTarget.value === ''){\n            setTimeout(() => showTimeOut(), 500);\n            if (questionNumber < props.stateData.questions.length){\n                setTimeout(() => triggerNextQuestion(), 500);\n            }\n            else {\n                setTimeout(() => props.showResults(), 500);\n            }\n        }\n        if (questionNumber < props.stateData.questions.length){\n            setTimeout(() => triggerNextQuestion(), 500);\n        }\n        else {\n            setTimeout(() => props.showResults(), 500);\n        }\n    };\n\n    return (\n        <div className={'gameScreen'}>\n            <GameRenderer questionText={questionText}\n                          stateData={props.stateData}\n                          questionNumber={questionNumber}\n                          options={options}\n                          checkAnswer={checkAnswer}\n                          totalQuestions={props.stateData.questions.length} />\n        </div>\n    );\n};\n\nexport default GameScreen;"]},"metadata":{},"sourceType":"module"}