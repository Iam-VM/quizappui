{"ast":null,"code":"var _jsxFileName = \"/home/vm/Desktop/quizApp/quizappui/src/components/playComponents/gameRenderer.js\";\nimport React, { useState, useEffect } from 'react';\nimport Question from \"./question\";\nimport OptionInstant from \"./optionInstant\";\nimport QuestionCount from \"./questionCount\"; //props: questionText(string), options(list of options), stateData.\n\nconst GameRenderer = props => {\n  const [timer, setTimer] = useState(20);\n  useEffect(() => {\n    if (timer === 0) {\n      const optionText = '';\n      props.checkAnswer(optionText);\n    }\n\n    setTimeout(() => {\n      if (timer >= 0) {\n        setTimer(timer - 1);\n      }\n    }, 1000);\n  }, [timer, props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'gameScreen',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: 'questionHead',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: 'timer',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, timer), /*#__PURE__*/React.createElement(\"span\", {\n    className: 'questionHeadText',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Question: \"), /*#__PURE__*/React.createElement(QuestionCount, {\n    questionNumber: props.questionNumber,\n    totalQuestions: props.stateData.questions.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Question, {\n    question: props.questionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: 'options',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, props.options.map(option => /*#__PURE__*/React.createElement(OptionInstant, {\n    checkAnswer: props.checkAnswer,\n    optionText: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 48\n    }\n  }))));\n};\n\nexport default GameRenderer;","map":{"version":3,"sources":["/home/vm/Desktop/quizApp/quizappui/src/components/playComponents/gameRenderer.js"],"names":["React","useState","useEffect","Question","OptionInstant","QuestionCount","GameRenderer","props","timer","setTimer","optionText","checkAnswer","setTimeout","questionNumber","stateData","questions","length","questionText","options","map","option"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,KAAK,KAAK,CAAd,EAAgB;AACZ,YAAME,UAAU,GAAG,EAAnB;AACAH,MAAAA,KAAK,CAACI,WAAN,CAAkBD,UAAlB;AACH;;AACDE,IAAAA,UAAU,CAAC,MAAM;AACb,UAAIJ,KAAK,IAAI,CAAb,EAAe;AACXC,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;AACJ,KAJS,EAIP,IAJO,CAAV;AAKH,GAVQ,EAUN,CAACA,KAAD,EAAQD,KAAR,CAVM,CAAT;AAaA,sBACI;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,KAA3B,CADJ,eAEI;AAAM,IAAA,SAAS,EAAE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,oBAAC,aAAD;AAAe,IAAA,cAAc,EAAED,KAAK,CAACM,cAArC;AAAqD,IAAA,cAAc,EAAEN,KAAK,CAACO,SAAN,CAAgBC,SAAhB,CAA0BC,MAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,eAMI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAET,KAAK,CAACU,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI;AAAI,IAAA,SAAS,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KAAK,CAACW,OAAN,CAAcC,GAAd,CAAmBC,MAAD,iBAAY,oBAAC,aAAD;AAAe,IAAA,WAAW,EAAEb,KAAK,CAACI,WAAlC;AAA+C,IAAA,UAAU,EAAES,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,CADL,CAPJ,CADJ;AAaH,CA5BD;;AA8BA,eAAed,YAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport Question from \"./question\";\nimport OptionInstant from \"./optionInstant\";\nimport QuestionCount from \"./questionCount\";\n\n//props: questionText(string), options(list of options), stateData.\n\n\nconst GameRenderer = (props) => {\n    const [timer, setTimer] = useState(20);\n    useEffect(() => {\n        if (timer === 0){\n            const optionText = '';\n            props.checkAnswer(optionText);\n        }\n        setTimeout(() => {\n            if (timer >= 0){\n                setTimer(timer - 1);\n            }\n        }, 1000);\n    }, [timer, props]);\n\n\n    return(\n        <div className={'gameScreen'}>\n            <div className={'questionHead'}>\n                <span className={'timer'}>{timer}</span>\n                <span className={'questionHeadText'}>Question: </span>\n                <QuestionCount questionNumber={props.questionNumber} totalQuestions={props.stateData.questions.length}/>\n            </div>\n            <Question question={props.questionText} />\n            <ul className={'options'}>\n                {props.options.map((option) => <OptionInstant checkAnswer={props.checkAnswer} optionText={option} />)}\n            </ul>\n        </div>\n    );\n};\n\nexport default GameRenderer;"]},"metadata":{},"sourceType":"module"}