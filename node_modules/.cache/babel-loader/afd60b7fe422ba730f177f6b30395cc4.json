{"ast":null,"code":"import _slicedToArray from\"/home/vm/Desktop/quizApp/quizappui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Question from\"./question\";import OptionInstant from\"./optionInstant\";import QuestionCount from\"./questionCount\";import TimeOut from\"./timeOut\";import'./playQuestion.css';//props: questionText(string), options(list of options), stateData.\nvar GameRenderer=function GameRenderer(props){var _useState=useState(props.stateData.questions[props.progress]!==undefined?props.stateData.questions[props.progress].time:null),_useState2=_slicedToArray(_useState,2),timer=_useState2[0],setTimer=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),timeOut=_useState4[0],setTimeOut=_useState4[1];useEffect(function(){var id;if(timer!==null){if(timer>0){id=setInterval(function(){return setTimer(timer-1);},1000);console.log('useEffect');}if(timer===0){setTimeOut(true);}}return function(){clearInterval(id);console.log('unmounted');};},[timer]);var refreshTimer=function refreshTimer(){if(props.questionNumber<props.stateData.questions.length){setTimer(props.stateData.questions[props.progress+1].time);}};var checkAnswer=function checkAnswer(optionText,nullParam){props.checkAnswer(optionText,nullParam);setTimeout(function(){return setTimeOut(false);},500);setTimer(20);};if(timeOut){return/*#__PURE__*/React.createElement(TimeOut,{time:3,checkAnswer:checkAnswer});}return/*#__PURE__*/React.createElement(\"div\",{className:'gameRenderer'},/*#__PURE__*/React.createElement(\"div\",{className:'questionHead'},/*#__PURE__*/React.createElement(\"div\",{className:'questionSubHead'},/*#__PURE__*/React.createElement(\"span\",{className:'questionHeadText'},\"Question: \"),/*#__PURE__*/React.createElement(QuestionCount,{questionNumber:props.questionNumber,totalQuestions:props.stateData.questions.length})),/*#__PURE__*/React.createElement(\"div\",{className:'timerContainer'},/*#__PURE__*/React.createElement(\"span\",{className:'timerHead'},\"Timer\"),/*#__PURE__*/React.createElement(\"div\",{className:'timer'},timer),/*#__PURE__*/React.createElement(\"div\",{className:'timerUnderLine'}))),/*#__PURE__*/React.createElement(Question,{question:props.questionText}),/*#__PURE__*/React.createElement(\"div\",{className:'optionsContainer'},/*#__PURE__*/React.createElement(\"ul\",{className:'options'},props.options.map(function(option){return/*#__PURE__*/React.createElement(OptionInstant,{timer:timer,netTime:props.stateData.questions[props.progress].time,refreshTimer:refreshTimer,checkAnswer:props.checkAnswer,optionText:option});}))));};export default GameRenderer;","map":{"version":3,"sources":["/home/vm/Desktop/quizApp/quizappui/src/components/playComponents/gameRenderer.js"],"names":["React","useState","useEffect","Question","OptionInstant","QuestionCount","TimeOut","GameRenderer","props","stateData","questions","progress","undefined","time","timer","setTimer","timeOut","setTimeOut","id","setInterval","console","log","clearInterval","refreshTimer","questionNumber","length","checkAnswer","optionText","nullParam","setTimeout","questionText","options","map","option"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport Question from \"./question\";\nimport OptionInstant from \"./optionInstant\";\nimport QuestionCount from \"./questionCount\";\nimport TimeOut from \"./timeOut\";\nimport './playQuestion.css';\n\n//props: questionText(string), options(list of options), stateData.\n\n\nconst GameRenderer = (props) => {\n    const [timer, setTimer] = useState(props.stateData.questions[props.progress] !== undefined ? props.stateData.questions[props.progress].time : null);\n    const [timeOut, setTimeOut] = useState(false);\n\n    useEffect(() => {\n        let id;\n        if (timer !== null) {\n            if (timer > 0){\n                id = setInterval(() => setTimer(timer-1), 1000);\n                console.log('useEffect');\n            }\n            if (timer === 0) {\n                setTimeOut(true);\n            }\n        }\n\n\n        return () => {\n            clearInterval(id);\n            console.log('unmounted');\n        };\n    }, [timer]);\n\n\n    const refreshTimer = () => {\n        if (props.questionNumber < props.stateData.questions.length) {\n            setTimer(props.stateData.questions[props.progress + 1].time);\n        }\n    };\n\n    const checkAnswer = (optionText, nullParam) => {\n        props.checkAnswer(optionText, nullParam);\n        setTimeout(() => setTimeOut(false), 500);\n        setTimer(20);\n    };\n\n    if (timeOut) {\n        return <TimeOut time={3} checkAnswer={checkAnswer} />;\n    }\n\n    return(\n        <div className={'gameRenderer'}>\n                <div className={'questionHead'}>\n                    <div className={'questionSubHead'}>\n                        <span className={'questionHeadText'}>Question: </span>\n                        <QuestionCount questionNumber={props.questionNumber} totalQuestions={props.stateData.questions.length}/>\n                    </div>\n                    <div className={'timerContainer'}>\n                        <span className={'timerHead'}>Timer</span>\n                        <div className={'timer'}>{timer}</div>\n                        <div className={'timerUnderLine'}></div>\n                    </div>\n                </div>\n            <Question question={props.questionText} />\n            <div className={'optionsContainer'}>\n                <ul className={'options'}>\n                    {props.options.map((option) => <OptionInstant  timer={timer} netTime={props.stateData.questions[props.progress].time} refreshTimer={refreshTimer} checkAnswer={props.checkAnswer} optionText={option} />)}\n                </ul>\n            </div>\n        </div>\n    );\n\n};\n\nexport default GameRenderer;\n"]},"metadata":{},"sourceType":"module"}