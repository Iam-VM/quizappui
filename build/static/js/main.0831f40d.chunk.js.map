{"version":3,"sources":["components/homeComponents/navBar.js","components/homeComponents/underLine.js","components/homeComponents/bodyText.js","components/homeComponents/signInButton.js","components/home.js","components/playComponents/question.js","components/playComponents/optionInstant.js","components/playComponents/questionCount.js","components/playComponents/timeOut.js","components/playComponents/gameRenderer.js","queries.js","components/playLevelThree.js","components/playComponents/gameScreen.js","components/playComponents/result.js","components/playComponents/studentForm.js","components/playComponents/dynamicGameArea.js","components/playComponents/loading.js","components/playComponents/error.js","components/playComponents/haveNotPlayed.js","components/playComponents/belowCutOff.js","components/errorNotFound.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","className","to","UnderLine","BodyText","SignInButton","Home","href","src","alt","Question","question","OptionInstant","onClick","netTime","ratio","timer","checkAnswer","optionText","questionNumber","refreshTimer","QuestionCount","totalQuestions","TimeOut","id","useState","time","setTimer","useEffect","setInterval","clearInterval","GameRenderer","undefined","stateData","questions","progress","timeOut","setTimeOut","length","nullParam","setTimeout","Math","floor","questionText","haveImage","haveOptions","options","map","option","onSubmit","e","preventDefault","target","elements","answerText","value","type","name","crypto","randomBytes","toString","GET_QUERY","gql","ADD_RESPONSE","ADD_STUDENT_DATA","answeredQuestionArray","GameScreen","useMutation","triggerMutation","data","setProgress","setQuestionNumber","setHaveImage","setHaveOptions","setQuestionText","setOptions","optionsArray","optionOne","optionTwo","optionThree","optionFour","showResults","triggerNextQuestion","addResponse","response","point","variables","ID","Cookies","get","points","qN","includes","push","correctOption","toLowerCase","round","setPoints","Result","StudentForm","isButtonDisabled","setIsButtonDisabled","phoneNumber","setPhoneNumber","showPhoneNumberError","setShowPhoneNumberError","collegeName","setCollegeName","showCollegeNameError","setShowCollegeNameError","isNaN","parseInt","phone","branch","year","college","slice","setFormFilled","formHandler","onChange","maxLength","placeholder","disabled","DynamicGameArea","startClicked","setStartClicked","showResultState","setShowResultState","formFilled","Loading","HaveNotPlayed","firstName","picture","BelowCutOff","Play","useQuery","loading","error","user","pointsLevelTwo","progressLevelTwo","progressLevelThree","pointsLevelThree","ErrorNotFound","App","document","body","classList","add","path","component","exact","Boolean","window","location","hostname","match","client","ApolloClient","uri","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.0831f40d.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './home.css';\n\nconst NavBar = (props) => {\n    return(\n        <div className={'navBar'}>\n            <Link to={'/'} className={'navBar-logo'}>\n                <span className={'salvos-navBarLogoText'}>UNRIDDLE - 20</span>\n                <div className={'salvos-logo-decoration'}>\n                    <div className={'salvos-logo-underline'}></div>\n                    {/*<span className={'salvos-quiz-footer'}>Quiz</span>*/}\n                </div>\n            </Link>\n        </div>\n    );\n};\n\nexport default NavBar;\n","import React from 'react';\n\n\nconst UnderLine = (props) => {\n    return(\n        <div className={'underLine'}>\n        </div>\n    );\n};\n\nexport default UnderLine;","import React from 'react';\nimport UnderLine from './underLine';\n\nconst BodyText = (props) => {\n    return(\n        <div className={'bodyText'}>\n            <div className={'bodyText-div-head'}>\n                <h2 className={'bodyText-head-online'}>Where</h2>\n                <h2 className={'bodyText-head-quiz'}>Grey</h2>\n                <h2 className={'bodyText-head-quiz'}>Matters</h2>\n            </div>\n            <UnderLine />\n            <h4 className={'bodyText-byLine'}>HUB WAR</h4>\n        </div>\n    );\n};\n\nexport default BodyText;","import React from 'react';\nimport {GrGoogle} from 'react-icons/gr';\n\nconst SignInButton = (props) => {\n    return(\n        <div className={'button'}>\n            <GrGoogle className='button-logo' />\n            <p className={'button-text'}>Sign In</p>\n        </div>\n    );\n};\n\nexport default SignInButton;\n","import React from 'react';\nimport './homeComponents/home.css';\nimport NavBar from './homeComponents/navBar';\nimport BodyText from './homeComponents/bodyText';\nimport SignInButton from './homeComponents/signInButton';\n\nconst Home = (props) => {\n    return(\n        <div className={'home'}>\n            <NavBar className={'home-navBar'}/>\n            <BodyText className={'home-bodyText'}/>\n            <div className={'home-signInButtonLarge'}>\n                <a href={'https://quizapp-server.herokuapp.com/auth/google'} className={'a'}>\n                    <SignInButton/>\n                </a>\n            </div>\n            {/*<div className={'coordinators'}>*/}\n            {/*    <span className={'coordinators-head'}>Coordinators </span>*/}\n            {/*    <span className={'coordinators-instant'}>{`Mahesh 9995080629`}</span>*/}\n            {/*    <span className={'coordinators-instant'}>{`Ashiq  9746184504`}</span>*/}\n            {/*</div>*/}\n            <div className={'home-logos'}>\n                <div className={'mhmLogoContainer'}>\n                    <img src={`https://quizapp-server.herokuapp.com/mhmlogoWhite.png`} className={'mhmImage'}/>\n                </div>\n                <div className={'ieeeLogoContainer'}>\n                    <img src={`https://quizapp-server.herokuapp.com/IEEEWhiteLOGO.png`} className={'ieeeImage'} />\n                </div>\n                <div className={'cevLogoContainer'}>\n                    <img src={`https://quizapp-server.herokuapp.com/CEVWhiteLogo.png`} alt=\"\" className={'cevImage'}/>\n                </div>\n            </div>\n            <div className={'developer'}>\n                <div className={'developer-underline'}></div>\n                <span className={'developer-name'}><span className={'developerDollarSign'}>{'${ '}</span>Iam-VM<span className={'developerDollarSign'}>{' }'}</span></span>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport './playQuestion.css';\n\nconst Question = (props) => {\n\treturn (\n\t    <div className={'question'}>\n            <span className={'questionQ'}>Q.</span>\n            {props.question}\n\t    </div>\n    );\n};\n\nexport default Question;\n","import React, {useEffect, useState} from 'react';\nimport './playQuestion.css';\n\nconst OptionInstant = (props) => {\n\n\treturn (\n        <li className={'optionInstant'}>\n            <button className={'optionButton'} onClick={() => {\n                if (props.netTime !== null) {\n                    const ratio = props.timer/props.netTime;\n                    props.checkAnswer(props.optionText, ratio, props.questionNumber);\n                    props.refreshTimer();\n                }\n            }}>\n                {props.optionText}\n            </button>\n        </li>\n    );\n};\n\nexport default OptionInstant;\n","import React from 'react';\nimport './playQuestion.css';\n\n//TODO: need questionNumber and totalQuestions\n\nconst QuestionCount = (props) => {\n\treturn (\n        <div className={'counterContainer'}>\n            <span className={'questionCounter'}>{props.questionNumber}/{props.totalQuestions}</span>\n            <div className={'counterUnderLine'}></div>\n        </div>\n    );\n};\n\nexport default QuestionCount;\n","import React, {useState, useEffect} from 'react';\n\n\nconst TimeOut = (props) => {\n    const [timer, setTimer] = useState(props.time);\n    let id;\n    useEffect(() => {\n        if (timer > 1) {\n            id = setInterval(() => {\n                setTimer((timer-1));\n            }, 1200);\n        }\n        if (timer === 1) {\n            props.checkAnswer('', null);\n        }\n\n        return () => {clearInterval(id)};\n    }, [timer]);\n\n\n\n    return (\n        <div className={'timeOut'}>\n            <h2 className={'timeOutHead'}>TimeOut!!</h2>\n            <div className={'timeOut-underline'}></div>\n            <div className={'timeOutContent'}>\n                <span className={'timeOutP'}>Next question in </span>\n                <div className={'timeOutTime'}><span className={'timeOutTimeText'}>{timer}</span></div>\n            </div>\n        </div>\n    );\n};\n\nexport default TimeOut;\n","import React,{useState, useEffect} from 'react';\nimport Question from \"./question\";\nimport OptionInstant from \"./optionInstant\";\nimport QuestionCount from \"./questionCount\";\nimport TimeOut from \"./timeOut\";\nimport './playQuestion.css';\nimport crypto from 'crypto';\n\n\n\nconst GameRenderer = (props) => {\n    const [timer, setTimer] = useState(props.stateData.questions[props.progress] !== undefined ? props.stateData.questions[props.progress].time : null);\n    const [timeOut, setTimeOut] = useState(false);\n\n    useEffect(() => {\n        let id;\n        if (timer !== null) {\n            if (timer > 0){\n                id = setInterval(() => setTimer(timer-1), 1200);\n            }\n            if (timer === 0) {\n                setTimeOut(true);\n            }\n        }\n\n\n        return () => {\n            clearInterval(id);\n        };\n    }, [timer]);\n\n\n    const refreshTimer = () => {\n        if (props.questionNumber < props.stateData.questions.length) {\n            setTimer(props.stateData.questions[props.progress + 1].time);\n        }\n    };\n\n    const handleAnswerTextSubmit = (e) => {\n        e.preventDefault();\n        let netTime = (props.stateData.questions[props.progress] !== undefined) ? props.stateData.questions[props.progress].time : null;\n        let ratio = timer/netTime;\n        props.checkAnswer(e.target.elements.answerText.value, ratio, props.questionNumber);\n        e.target.elements.answerText.value = '';\n        refreshTimer();\n    };\n\n    const checkAnswer = (optionText, nullParam) => {\n        props.checkAnswer(optionText, nullParam, props.questionNumber);\n        setTimeout(() => setTimeOut(false), 1000);\n        if (props.questionNumber < props.stateData.questions.length) {\n            setTimer(props.stateData.questions[props.progress + 1].time);\n        }\n    };\n\n    if (timeOut) {\n        return <TimeOut time={4} checkAnswer={checkAnswer} />;\n    }\n\n    return(\n        <div className={'gameRenderer'}>\n                <div className={'questionHead'}>\n                    <div className={'questionSubHead'}>\n                        <span className={'questionHeadText'}>Question: </span>\n                        <QuestionCount questionNumber={props.questionNumber} totalQuestions={props.stateData.questions.length}/>\n                    </div>\n                    <div className={'timerContainer'}>\n                        <span className={'timerHead'}>Timer</span>\n                        <div className={'timer'}>\n                        \t<span className={'timerTimeMin'}>{`${(Math.floor(timer/60)) < 10 ? 0:''}${Math.floor(timer/60)}`}</span>\n                            <span className={'timerMinSecSeparator'}>:</span>\n                            <span className={'timerTimeSec'}>{`${(timer-(Math.floor(timer/60)*60)) < 10 ? 0:''}${timer-(Math.floor(timer/60)*60)}`}</span>\n                        </div>\n                        <div className={'timerUnderLine'}></div>\n                    </div>\n                </div>\n            <Question question={props.questionText} />\n            {(props.haveImage === 'TRUE') ? <img src={`https://quizapp-server.herokuapp.com/${props.questionNumber}.jpg`} className={'questionImage'} alt={'image'} /> : null}\n            {\n                (props.haveOptions === 'TRUE') ? <div className={'optionsContainer'}><ul className={'options'}>{props.options.map((option) => <OptionInstant  timer={timer} netTime={props.stateData.questions[props.progress] !== undefined ? props.stateData.questions[props.progress].time : null} refreshTimer={refreshTimer} checkAnswer={props.checkAnswer} optionText={option} questionNumber={props.questionNumber} />)}</ul></div>\n                    :<div className={'answerTextContainer'}><form className={'answerTextForm'} onSubmit={handleAnswerTextSubmit}>\n                        <label className={'answerTextLabel'}>Answer : </label>\n                        <input type={'text'} className={'answerTextInput'} id={'answerText'} name={crypto.randomBytes(8).toString('hex')} />\n                        <button type={'submit'} value={'submitAnswer'} className={'button answerSubmitButton'}>Submit Answer</button>\n                    </form></div>\n            }\n\n        </div>\n    );\n};\n\nexport default GameRenderer;\n","import gql from 'graphql-tag';\n\nexport const GET_QUERY = gql`\n    query ($ID : String!)\n    {\n        user(ID : $ID)\n        {\n            userName,\n            firstName,\n            picture,\n            branch,\n            lastName,\n            progress,\n            points,\n            pointsLevelTwo,\n            progressLevelTwo,\n            pointsLevelThree,\n            progressLevelThree\n        },\n        questions\n        {\n            questionID,\n            question,\n            time,\n            haveOptions,\n            haveImage,\n            optionOne,\n            optionTwo,\n            optionThree,\n            optionFour,\n            correctOption\n        }\n    }\n`;\n\nexport const ADD_RESPONSE = gql`\n    mutation AddResponse($ID: String!, $progress: Int!, $response : String!, $points : Int!) {\n        addResponseLevelThree(ID: $ID, progress: $progress, response: $response, points : $points) {\n            progress\n        }\n    }\n`;\n\nexport const ADD_STUDENT_DATA = gql`\n    mutation AddStUdentData($ID: String!, $phone: String!, $branch : String!, $year : String!, $college : String!) {\n        addStudentData(ID: $ID, phone: $phone, year: $year, branch : $branch, college : $college) {\n            branch\n        }\n    }\n`;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './playComponents/playStart.css';\nimport DynamicGameArea from './playComponents/dynamicGameArea';\nimport { useQuery } from '@apollo/react-hooks';\nimport Cookies from 'js-cookie';\nimport {GET_QUERY} from \"../queries\";\nimport Loading from './playComponents/loading';\nimport Error from './playComponents/error';\nimport HaveNotPlayed from \"./playComponents/haveNotPlayed\";\nimport BelowCutOff from \"./playComponents/belowCutOff\";\n\n\nlet stateData;\n\nconst Play = (props) => {\n\n    const ID = Cookies.get('user_id');\n    const {loading, error, data} = useQuery(GET_QUERY, {\n        variables : {ID}\n    });\n\n    if (error) {\n        return  <Error />;\n    }\n    if (loading) {\n        return  <Loading />;\n    }\n\n    stateData = {...data.user};\n    stateData.questions = data.questions;\n\n    if (stateData.pointsLevelTwo < 800 && stateData.progressLevelTwo === -1) {\n        return <HaveNotPlayed stateData={stateData}/>;\n    }\n\n    if (stateData.pointsLevelTwo < 800) {\n        return <BelowCutOff points={stateData.pointsLevelTwo} stateData={stateData} />;\n    }\n\n    stateData.progress = stateData.progressLevelThree + 1;\n    stateData.points = stateData.pointsLevelThree;\n\n    return(\n        <div className={'play'}>\n            <div className={'play-navBar'}>\n                {/*<Link to={'/'} className={'navBar-logo'}>*/}\n                {/*    <span>Salvos</span>*/}\n                {/*    <div className={'salvos-logo-decoration'}>*/}\n                {/*        <div className={'salvos-logo-underline'}></div>*/}\n                {/*        <span className={'salvos-quiz-footer'}>Quiz</span>*/}\n                {/*    </div>*/}\n                {/*</Link>*/}\n                <div className={'helloName'}>\n                    <div className={'helloName-text'}>\n                        <span className={'helloName-hello'}>Hello,</span>\n                        <span className={'helloName-name'}>{`${stateData.firstName || `...`}`}</span>\n                    </div>\n                    <img src={stateData.picture} className={'helloName-image'} alt='dp' />\n                </div>\n            </div>\n            <DynamicGameArea className={'dynamicGameArea'} stateData={stateData} />\n        </div>\n    );\n};\n\nexport default Play;\n","import React, {useState, useEffect} from 'react';\nimport GameRenderer from \"./gameRenderer\";\nimport {ADD_RESPONSE} from \"../../queries\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport Cookies from 'js-cookie';\nimport './playQuestion.css';\n\n//add response array and showResults func in parent\n\nconst answeredQuestionArray = [];\nconst GameScreen = (props) => {\n    const [triggerMutation, { data }] = useMutation(ADD_RESPONSE);\n    const [progress, setProgress] = useState(props.progress); //changed count to progress\n    const [questionNumber, setQuestionNumber] = useState(null);\n    const [haveImage, setHaveImage] = useState(\"\");\n    const [haveOptions, setHaveOptions] = useState(\"\");\n    const [questionText, setQuestionText] = useState('');\n    const [options, setOptions] = useState([]);\n\n\n    useEffect(() => {\n        if (progress < props.stateData.questions.length) {\n            setQuestionText(props.stateData.questions[progress].question);\n            setHaveImage(props.stateData.questions[progress].haveImage);\n            setHaveOptions(props.stateData.questions[progress].haveOptions);\n            const optionsArray = [props.stateData.questions[progress].optionOne,\n                props.stateData.questions[progress].optionTwo,\n                props.stateData.questions[progress].optionThree,\n                props.stateData.questions[progress].optionFour];\n            setOptions(optionsArray);\n            setQuestionNumber(progress + 1);\n        }\n        if (progress === props.stateData.questions.length) {\n            props.showResults();\n        }\n    }, [progress]);\n\n\n\n    const triggerNextQuestion = () => {\n        setProgress(progress + 1);\n    };\n\n    const addResponse = (response, point) => {\n        triggerMutation({\n            variables : {ID : Cookies.get('user_id'),\n            progress : questionNumber,\n            response : response,\n            points : point}\n        });\n    };\n\n\n\n\n\n    const checkAnswer = (optionText, ratio, qN) => {\n        if (progress < props.stateData.questions.length) {\n            if (!answeredQuestionArray.includes(qN)) {\n                answeredQuestionArray.push(qN);\n                if (ratio !== null) {\n                    const correctOptionsArray = props.stateData.questions[progress].correctOption.map(option => option.toLowerCase());\n                    if (correctOptionsArray.includes(optionText.toLowerCase())) {\n                        let point = 200 + Math.round(ratio*100);\n                        addResponse(optionText, props.points + point);\n                        props.setPoints(props.points + point);\n                        setTimeout(() => triggerNextQuestion(), 500);\n                    }\n                    else {\n                        addResponse(optionText, props.points);\n                        setTimeout(() => triggerNextQuestion(), 500);\n                    }\n                }\n                else {\n                    addResponse(optionText, props.points);\n                    setTimeout(() => triggerNextQuestion(), 500);\n                }\n            }\n        }\n    };\n\n\n    return (\n        <div className={'gameScreen'}>\n            <GameRenderer questionText={questionText}\n                          stateData={props.stateData}\n                          questionNumber={questionNumber}\n                          haveImage={haveImage}\n                          haveOptions={haveOptions}\n                          options={options}\n                          progress={progress}\n                          checkAnswer={checkAnswer}\n                          totalQuestions={props.stateData.questions.length} />\n        </div>\n    );\n};\n\nexport default GameScreen;","import React from 'react';\nimport './playQuestion.css';\n\n\nconst Result = (props) => {\n    return(\n        <div className={'limitExceeded'}>\n            <h2 className={'limitExceededHead'}>Quiz Completed!</h2>\n            <div className={'limitExceeded-underline'}></div>\n            <h3 className={'limitExceededSubHead'}>Finished it like a <span\n                className={'limitExceeded-ninja'}>Warrior!</span></h3>\n            <div className={'pointsContainer'}>\n                <span className={'pointsHead'}>Your Score</span>\n                <span className={'pointsCount'}>{props.points}</span>\n            </div>\n            <a href={'https://quizapp-server.herokuapp.com/auth/logout'} className={'a-signout'}>\n                <div className={'button start-button'} >Sign Out</div>\n            </a>\n            <div className={'developer resultDeveloper'}>\n                <div className={'developer-underline'}></div>\n                <span className={'developer-name'}><span className={'developerDollarSign'}>$</span>{`\\{ Iam-VM }`}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Result;\n","import React, {useState, useEffect} from 'react';\nimport './playStart.css';\nimport {ADD_STUDENT_DATA} from '../../queries';\nimport {useMutation} from \"@apollo/react-hooks\";\nimport Cookies from \"js-cookie\";\nimport crypto from 'crypto';\n\nconst StudentForm = (props) => {\n\n    const [triggerMutation, { data }] = useMutation(ADD_STUDENT_DATA);\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n    const [phoneNumber, setPhoneNumber] = useState(null);\n    const [showPhoneNumberError, setShowPhoneNumberError] = useState(false);\n    const [collegeName, setCollegeName] = useState(null);\n    const [showCollegeNameError, setShowCollegeNameError] = useState(false);\n    const branchesArray = ['AERONAUTICAL ENGINEERING',\n        'APPLIED ELECTRONICS AND INSTRUMENTATION ENGINEERING',\n        'AUTOMOBILE ENGINEERING',\n        'BIOMEDICAL ENGINEERING',\n        'BIOTECHNOLOGY',\n        'CHEMICAL ENGINEERING',\n        'CIVIL ENGINEERING',\n        'COMPUTER SCIENCE AND ENGINEERING',\n        'ELECTRICAL AND ELECTRONICS ENGINEERING',\n        'ELECTRICAL ENGINEERING',\n        'ELECTRONICS AND BIOMEDICAL ENGINEERING',\n        'ELECTRONICS AND COMMUNICATION ENGINEERING',\n        'FOOD TECHNOLOGY',\n        'INDUSTRIAL ENGINEERING',\n        'INFORMATION TECHNOLOGY',\n        'INSTRUMENTATION AND CONTROL ENGINEERING',\n        'MECHANICAL ENGINEERING',\n        'MECHANICAL ENGINEERING (AUTO)',\n        'MECHANICAL ENGINEERING (PRODUCTION)',\n        'MECHATRONICS',\n        'METALLURGY',\n        'NAVAL ARCHITECTURE & SHIP BUILDING ENGINEERING',\n        'POLYMER ENGINEERING',\n        'PRODUCTION ENGINEERING',\n        'ROBOTICS AND AUTOMATION',\n        'SAFETY AND FIRE ENGINEERING'];\n\n    useEffect(() => {\n        setIsButtonDisabled(phoneNumber === null || phoneNumber === '' || isNaN(parseInt(phoneNumber) || showPhoneNumberError || collegeName === null || collegeName === '' || showCollegeNameError));\n    }, [phoneNumber, showPhoneNumberError, collegeName, showCollegeNameError]);\n\n    const formHandler = (e) => {\n        if (!((phoneNumber.length !== 10) || (parseInt(phoneNumber).toString().length !== phoneNumber.length) || collegeName === null || collegeName === '')) {\n            e.preventDefault();\n            const phone = e.target.elements.phone.value;\n            const branch = e.target.elements.branch.value;\n            const year = e.target.elements.year.value;\n            const college = (collegeName.length > 300) ? collegeName.slice(0,300) : collegeName;\n            triggerMutation({\n                variables : {ID : Cookies.get('user_id'),\n                    phone : phone,\n                    branch : branch,\n                    year : year,\n                    college : college}\n            });\n            props.setFormFilled(true);\n        }\n        else {\n            e.preventDefault();\n            if ((phoneNumber.length !== 10) || (parseInt(phoneNumber).toString().length !== phoneNumber.length)) {\n                setShowPhoneNumberError(true);\n            }\n            if (collegeName === null || collegeName === '') {\n                setShowCollegeNameError(true);\n            }\n        }\n    };\n    \n    const handlePhoneNumberChange = (e) => {\n        setPhoneNumber(e.target.value);\n        if (showPhoneNumberError) {\n            if (!((phoneNumber.length !== 10) || (parseInt(phoneNumber).toString().length !== phoneNumber.length))) {\n                setShowPhoneNumberError(false);\n            }\n        }\n    };\n\n    const handleCollegeChange = (e) => {\n      setCollegeName(e.target.value);\n      if (showCollegeNameError) {\n          if (collegeName !== null || collegeName !== ''){\n              setShowCollegeNameError(false);\n          }\n      }\n    };\n\n\n    return (\n        <div className={'formWrapper'}>\n            <form className={'studentForm'} onSubmit={(e) => formHandler(e)}>\n                {(isButtonDisabled) ? <p className={'studentFormWarn'}>Please fill all fields to continue<span className={'formStar'}>*</span></p>:null}\n                <div className={'studentFormPhone'}>\n                    <label className={'studentFormLabel'}>Phone<sup className={'formStar'}>*</sup>  </label>\n                    <input onChange={handlePhoneNumberChange} maxLength={10} type=\"number\" id=\"phone\" name={crypto.randomBytes(8).toString('hex')} className={'studentFormPhoneInput'} placeholder={'Phone Number without +91'}/>\n                    {(showPhoneNumberError) ? <p className={'studentFormWarn'}>This doesn't look like a phone number<span className={'formStar'}>!</span></p>:null}\n                </div>\n                <div className={'studentFormCollege'}>\n                    <label className={'studentFormLabel'}>College<sup className={'formStar'}>*</sup>  </label>\n                    <input onChange={handleCollegeChange} maxLength={500} type=\"text\" id=\"college\" name={crypto.randomBytes(8).toString('hex')} className={'studentFormCollegeInput'} placeholder={'College Name'} />\n                    {(showCollegeNameError) ? <p className={'studentFormWarn'}>This can't be empty<span className={'formStar'}>!</span></p>:null}\n                </div>\n                <div className={'studentFormBranch'}>\n                    <label className={'studentFormLabel'}>Branch<sup className={'formStar'}>*</sup></label>\n                    <select id=\"branch\" name=\"branch\" className={'studentFormBranchInput'} >\n                        {branchesArray.map(branch => <option value={branch}>{branch}</option>)}\n                    </select>\n                </div>\n                <div className={'studentFormYear'}>\n                    <label className={'studentFormLabel'}>Year<sup className={'formStar'}>*</sup></label>\n                    <select id=\"year\" name=\"year\" className={'studentFormYearInput'} >\n                        <option value={'First'}>First</option>\n                        <option value={'Second'}>Second</option>\n                        <option value={'Third'}>Third</option>\n                        <option value={'Fourth'}>Fourth</option>\n                        <option value={'MTech1'}>MTech First</option>\n                        <option value={'MTech2'}>MTech Second</option>\n                    </select>\n                </div>\n                <button type={'submit'} disabled={isButtonDisabled} className={`button start-button studentFormButton ${isButtonDisabled?`disabledButton`:``}`} value={'Next'}>Next</button>\n            </form>\n        </div>\n    );\n};\n\nexport default StudentForm;\n","import React, {useEffect, useState} from 'react';\nimport GameScreen from './gameScreen';\nimport './playStart.css';\nimport '../homeComponents/home.css';\nimport './playQuestion.css';\nimport Result from \"./result\";\nimport StudentForm from './studentForm';\n\n\nconst DynamicGameArea = (props) => {\n\n    const [startClicked, setStartClicked] = useState(false);\n    const [showResultState, setShowResultState] = useState(false);\n    const [points, setPoints] = useState(null);\n    const [formFilled, setFormFilled] = useState(!(props.stateData.branch === null));\n\n    useEffect(() => {\n        setPoints(props.stateData.points);\n    }, []);\n\n\n    const showResults = () => {\n        setShowResultState(true);\n    };\n    if (props.stateData.progress >= props.stateData.questions.length){\n        return <Result points={points} />;\n    }\n\n    if (!formFilled ){\n        return <StudentForm setFormFilled={setFormFilled} />;\n    }\n    else {\n        if (!startClicked){\n            return (\n                <div className={'gameArea'}>\n                    <p className={'start-text'}>Let the battle begin!</p>\n                    <div className={'start-underLine'}></div>\n                    <div className={'button start-button'} onClick={() => setStartClicked(true)}>Start Game</div>\n                </div>\n            );\n        }\n        if (showResultState) {\n            return <Result points={points} />;\n        }\n        return <GameScreen stateData = {props.stateData} setPoints={setPoints} points={points} showResults={showResults} progress={props.stateData.progress} />;\n    }\n};\n\n\nexport default DynamicGameArea;\n","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div className={'loadingContainerMain'}>\n            <div className={'loadingContainer'}>\n            <span className={'loadingText'}>\n                Loading...\n            </span>\n            </div>\n        </div>\n    );\n\n};\n\nexport default Loading;","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div className={'errorContainerMain'}>\n            <div className={'errorContainer'}>\n            <span className={'errorText'}>\n                Oops!! An Error occurred while fetching data\n            </span>\n            </div>\n        </div>\n    );\n\n};\n\nexport default Loading;","import React from 'react';\n\nconst HaveNotPlayed = (props) => {\n    return (\n        <div className={'haveNotPlayed-main'}>\n            <div className={'play-navBar'}>\n                <div className={'helloName'}>\n                    <div className={'helloName-text'}>\n                        <span className={'helloName-hello'}>Hello,</span>\n                        <span className={'helloName-name'}>{`${props.stateData.firstName || `...`}`}</span>\n                    </div>\n                    <img src={props.stateData.picture} className={'helloName-image'} alt='dp' />\n                </div>\n            </div>\n            <div className={'haveNotPlayed'}>\n                <p className={'haveNotPlayedText'}>Seems like You missed Level 2 <span className={'formStar'}> !</span></p>\n                <a href={'https://quizapp-server.herokuapp.com/auth/logout'} className={'a-signout'}>\n                    <div className={'button start-button'} >Sign Out</div>\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default HaveNotPlayed;","import React from 'react';\n\nconst BelowCutOff = (props) => {\n  return (\n      <div className={'belowCutOff-main'}>\n          <div className={'play-navBar'}>\n              <div className={'helloName'}>\n                  <div className={'helloName-text'}>\n                      <span className={'helloName-hello'}>Hello,</span>\n                      <span className={'helloName-name'}>{`${props.stateData.firstName || `...`}`}</span>\n                  </div>\n                  <img src={props.stateData.picture} className={'helloName-image'} alt='dp' />\n              </div>\n          </div>\n          <div className={'belowCutOff'}>\n            <p className={'belowCutOffText'}>Seems Like You didn't qualify Level 2<span className={'formStar'}> !</span></p>\n            <div className={'belowCutOff-container'}>\n                <span className={'belowCutOff-containerText'}>Your score  <span className={'belowCutOff-containerPoints'}>{props.points}</span></span>\n                <span className={'belowCutOff-containerText'}>Our cutoff  <span className={'belowCutOff-containerCutOff'}>800</span></span>\n            </div>\n            <a href={'https://quizapp-server.herokuapp.com/auth/logout'} className={'a-signout'}>\n                <div className={'button start-button'} >Sign Out</div>\n            </a>\n        </div>\n      </div>\n  );\n};\n\nexport default BelowCutOff;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../App.css';\n\nconst ErrorNotFound = (props) => {\n    return(\n        <div className={'errorNotFound'}>\n            <div className={'errorNotFound-content'}>\n                <h1 className={'errorNotFound-error'}>Error</h1>\n                <h1 className={'errorNotFound-code'}>#404</h1>\n            </div>\n            <Link to={'/'} className={'backToHome'}>Back to /</Link>\n        </div>\n    );\n};\n\nexport default ErrorNotFound;\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Home from './components/home';\nimport Play from './components/playLevelThree';\nimport ErrorNotFound from './components/errorNotFound';\n\n\nconst setBodyStyles = () => {\n  document.body.classList.add('body');\n};\n\nconst App = () => {\n  setBodyStyles();\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/quiz/play' component={Play} exact />\n          <Route component={ErrorNotFound} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ApolloProvider} from 'react-apollo';\nimport ApolloClient from 'apollo-boost';\n\n//TODO: do change this during production\nconst API_PROD = 'https://quizapp-server.herokuapp.com/iamvmgraphqlapi';\n\n//apollo setup\nconst client = new ApolloClient({\n  uri : API_PROD\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n        <ApolloProvider client={client}>\n            <App />\n        </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}