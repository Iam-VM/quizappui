{"version":3,"sources":["components/homeComponents/navBar.js","components/homeComponents/underLine.js","components/homeComponents/bodyText.js","components/homeComponents/signInButton.js","components/home.js","components/playComponents/question.js","components/playComponents/optionInstant.js","components/playComponents/questionCount.js","components/playComponents/timeOut.js","components/playComponents/gameRenderer.js","queries.js","components/playLevelTwo.js","components/playComponents/gameScreen.js","components/playComponents/result.js","components/playComponents/studentForm.js","components/playComponents/dynamicGameArea.js","components/playComponents/loading.js","components/playComponents/error.js","components/playComponents/haveNotPlayed.js","components/playComponents/belowCutOff.js","components/errorNotFound.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","className","to","UnderLine","BodyText","SignInButton","Home","href","Question","question","OptionInstant","onClick","netTime","ratio","timer","checkAnswer","optionText","questionNumber","refreshTimer","QuestionCount","totalQuestions","TimeOut","id","useState","time","setTimer","useEffect","setInterval","clearInterval","GameRenderer","undefined","stateData","questions","progress","timeOut","setTimeOut","length","nullParam","setTimeout","questionText","haveImage","src","alt","options","map","option","GET_QUERY","gql","ADD_RESPONSE","ADD_STUDENT_DATA","answeredQuestionArray","GameScreen","useMutation","triggerMutation","data","setProgress","setQuestionNumber","setHaveImage","setQuestionText","setOptions","optionsArray","optionOne","optionTwo","optionThree","optionFour","showResults","triggerNextQuestion","addResponse","response","point","variables","ID","Cookies","get","points","qN","includes","push","correctOption","Math","round","setPoints","Result","StudentForm","isButtonDisabled","setIsButtonDisabled","phoneNumber","setPhoneNumber","showPhoneNumberError","setShowPhoneNumberError","isNaN","parseInt","onSubmit","e","toString","preventDefault","phone","target","elements","value","branch","year","setFormFilled","formHandler","onChange","maxLength","type","name","placeholder","disabled","DynamicGameArea","startClicked","setStartClicked","showResultState","setShowResultState","formFilled","Loading","HaveNotPlayed","BelowCutOff","Play","useQuery","loading","error","user","progressLevelTwo","pointsLevelTwo","firstName","ErrorNotFound","App","document","body","classList","add","path","component","exact","Boolean","window","location","hostname","match","client","ApolloClient","uri","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7e6a6078.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './home.css';\n\nconst NavBar = (props) => {\n    return(\n        <div className={'navBar'}>\n            <Link to={'/'} className={'navBar-logo'}>\n                <span>Salvos</span>\n                <div className={'salvos-logo-decoration'}>\n                    <div className={'salvos-logo-underline'}></div>\n                    <span className={'salvos-quiz-footer'}>Quiz</span>\n                </div>\n            </Link>\n        </div>\n    );\n};\n\nexport default NavBar;\n","import React from 'react';\n\n\nconst UnderLine = (props) => {\n    return(\n        <div className={'underLine'}>\n        </div>\n    );\n};\n\nexport default UnderLine;","import React from 'react';\nimport UnderLine from './underLine';\n\nconst BodyText = (props) => {\n    return(\n        <div className={'bodyText'}>\n            <div className={'bodyText-div-head'}>\n                <h2 className={'bodyText-head-online'}>Online</h2>\n                <h2 className={'bodyText-head-quiz'}>Quiz</h2>\n            </div>\n            <UnderLine />\n            <h4 className={'bodyText-byLine'}>Light up your brain</h4>\n        </div>\n    );\n};\n\nexport default BodyText;","import React from 'react';\nimport {FaGoogle} from 'react-icons/fa';\n\nconst SignInButton = (props) => {\n    return(\n        <div className={'button'}>\n            <FaGoogle className='button-logo' />\n            <p className={'button-text'}>Sign In</p>\n        </div>\n    );\n};\n\nexport default SignInButton;","import React from 'react';\nimport './homeComponents/home.css';\nimport NavBar from './homeComponents/navBar';\nimport BodyText from './homeComponents/bodyText';\nimport SignInButton from './homeComponents/signInButton';\n\n\nconst Home = (props) => {\n    return(\n        <div className={'home'}>\n            <NavBar className={'home-navBar'}/>\n            <BodyText className={'home-bodyText'}/>\n            <div className={'home-signInButtonLarge'}>\n                <a href={'https://quizapp-server.herokuapp.com/auth/google'} className={'a'}>\n                    <SignInButton/>\n                </a>\n            </div>\n            <div className={'coordinators'}>\n                <span className={'coordinators-head'}>Coordinators </span>\n                <span className={'coordinators-instant'}>{`Mahesh 9995080629`}</span>\n                <span className={'coordinators-instant'}>{`Ashiq  9746184504`}</span>\n            </div>\n            <div className={'developer'}>\n                <div className={'developer-underline'}></div>\n                <span className={'developer-name'}><span className={'developerDollarSign'}>$</span>{`\\{ Iam-VM }`}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport './playQuestion.css';\n\nconst Question = (props) => {\n\treturn (\n        <p className={'question'}>{`Q.  ${props.question}`}</p>\n    );\n};\n\nexport default Question;\n","import React, {useEffect, useState} from 'react';\nimport './playQuestion.css';\n\nconst OptionInstant = (props) => {\n\n\treturn (\n        <li className={'optionInstant'}>\n            <button className={'optionButton'} onClick={() => {\n                if (props.netTime !== null) {\n                    const ratio = props.timer/props.netTime;\n                    props.checkAnswer(props.optionText, ratio, props.questionNumber);\n                    props.refreshTimer();\n                }\n            }}>\n                {props.optionText}\n            </button>\n        </li>\n    );\n};\n\nexport default OptionInstant;\n","import React from 'react';\nimport './playQuestion.css';\n\n//TODO: need questionNumber and totalQuestions\n\nconst QuestionCount = (props) => {\n\treturn (\n        <div className={'counterContainer'}>\n            <span className={'questionCounter'}>{props.questionNumber}/{props.totalQuestions}</span>\n            <div className={'counterUnderLine'}></div>\n        </div>\n    );\n};\n\nexport default QuestionCount;\n","import React, {useState, useEffect} from 'react';\n\n\nconst TimeOut = (props) => {\n    const [timer, setTimer] = useState(props.time);\n    let id;\n    useEffect(() => {\n        if (timer > 1) {\n            id = setInterval(() => {\n                setTimer((timer-1));\n            }, 1200);\n        }\n        if (timer === 1) {\n            props.checkAnswer('', null);\n        }\n\n        return () => {clearInterval(id)};\n    }, [timer]);\n\n\n\n    return (\n        <div className={'timeOut'}>\n            <h2 className={'timeOutHead'}>TimeOut!!</h2>\n            <div className={'timeOut-underline'}></div>\n            <div className={'timeOutContent'}>\n                <span className={'timeOutP'}>Next question in </span>\n                <div className={'timeOutTime'}><span className={'timeOutTimeText'}>{timer}</span></div>\n            </div>\n        </div>\n    );\n};\n\nexport default TimeOut;\n","import React,{useState, useEffect} from 'react';\nimport Question from \"./question\";\nimport OptionInstant from \"./optionInstant\";\nimport QuestionCount from \"./questionCount\";\nimport TimeOut from \"./timeOut\";\nimport './playQuestion.css';\n\n\n\n\nconst GameRenderer = (props) => {\n    const [timer, setTimer] = useState(props.stateData.questions[props.progress] !== undefined ? props.stateData.questions[props.progress].time : null);\n    const [timeOut, setTimeOut] = useState(false);\n\n    useEffect(() => {\n        let id;\n        if (timer !== null) {\n            if (timer > 0){\n                id = setInterval(() => setTimer(timer-1), 1200);\n            }\n            if (timer === 0) {\n                setTimeOut(true);\n            }\n        }\n\n\n        return () => {\n            clearInterval(id);\n        };\n    }, [timer]);\n\n\n    const refreshTimer = () => {\n        if (props.questionNumber < props.stateData.questions.length) {\n            setTimer(props.stateData.questions[props.progress + 1].time);\n        }\n    };\n\n    const checkAnswer = (optionText, nullParam) => {\n        props.checkAnswer(optionText, nullParam, props.questionNumber);\n        setTimeout(() => setTimeOut(false), 1000);\n        if (props.questionNumber < props.stateData.questions.length) {\n            setTimer(props.stateData.questions[props.progress + 1].time);\n        }\n    };\n\n    if (timeOut) {\n        return <TimeOut time={4} checkAnswer={checkAnswer} />;\n    }\n\n    return(\n        <div className={'gameRenderer'}>\n                <div className={'questionHead'}>\n                    <div className={'questionSubHead'}>\n                        <span className={'questionHeadText'}>Question: </span>\n                        <QuestionCount questionNumber={props.questionNumber} totalQuestions={props.stateData.questions.length}/>\n                    </div>\n                    <div className={'timerContainer'}>\n                        <span className={'timerHead'}>Timer</span>\n                        <div className={'timer'}>{timer}</div>\n                        <div className={'timerUnderLine'}></div>\n                    </div>\n                </div>\n            <Question question={props.questionText} />\n            {(props.haveImage === 'true') ? <img src={`https://quizapp-server.herokuapp.com/${props.questionNumber}.jpg`} className={'questionImage'} alt={'image'} /> : null}\n            <div className={'optionsContainer'}>\n                <ul className={'options'}>\n                    {props.options.map((option) => <OptionInstant  timer={timer} netTime={props.stateData.questions[props.progress] !== undefined ? props.stateData.questions[props.progress].time : null} refreshTimer={refreshTimer} checkAnswer={props.checkAnswer} optionText={option} questionNumber={props.questionNumber} />)}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default GameRenderer;\n","import gql from 'graphql-tag';\n\nexport const GET_QUERY = gql`\n    query ($ID : String!)\n    {\n        user(ID : $ID)\n        {\n            userName,\n            firstName,\n            branch,\n            lastName,\n            progress,\n            points,\n            pointsLevelTwo,\n            progressLevelTwo,\n            pointsLevelThree,\n            progressLevelThree\n        },\n        questions\n        {\n            questionID,\n            question,\n            time,\n            haveImage,\n            optionOne,\n            optionTwo,\n            optionThree,\n            optionFour,\n            correctOption\n        }\n    }\n`;\n\nexport const ADD_RESPONSE = gql`\n    mutation AddResponse($ID: String!, $progress: Int!, $response : String!, $points : Int!) {\n        addResponseLevelTwo(ID: $ID, progress: $progress, response: $response, points : $points) {\n            progress\n        }\n    }\n`;\n\nexport const ADD_STUDENT_DATA = gql`\n    mutation AddStUdentData($ID: String!, $phone: String!, $branch : String!, $year : String!) {\n        addStudentData(ID: $ID, phone: $phone, year: $year, branch : $branch) {\n            branch\n        }\n    }\n`;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './playComponents/playStart.css';\nimport DynamicGameArea from './playComponents/dynamicGameArea';\nimport { useQuery } from '@apollo/react-hooks';\nimport Cookies from 'js-cookie';\nimport {GET_QUERY} from \"../queries\";\nimport Loading from './playComponents/loading';\nimport Error from './playComponents/error';\nimport HaveNotPlayed from \"./playComponents/haveNotPlayed\";\nimport BelowCutOff from \"./playComponents/belowCutOff\";\n\nlet stateData;\n\nconst Play = (props) => {\n\n    const ID = Cookies.get('user_id');\n    const {loading, error, data} = useQuery(GET_QUERY, {\n        variables : {ID}\n    });\n\n    if (error) {\n        return  <Error />;\n    }\n    if (loading) {\n        return  <Loading />;\n    }\n\n    stateData = {...data.user};\n    stateData.questions = data.questions;\n\n    if (stateData.points < 500 && stateData.progress === 0) {\n        return <HaveNotPlayed />;\n    }\n\n    if (stateData.points < 500) {\n        return <BelowCutOff points={stateData.points} />;\n    }\n\n    stateData.progress = stateData.progressLevelTwo;\n    stateData.points = stateData.pointsLevelTwo;\n\n    return(\n        <div className={'play'}>\n            <div className={'navBar'}>\n                <Link to={'/'} className={'navBar-logo'}>\n                    <span>Salvos</span>\n                    <div className={'salvos-logo-decoration'}>\n                        <div className={'salvos-logo-underline'}></div>\n                        <span className={'salvos-quiz-footer'}>Quiz</span>\n                    </div>\n                </Link>\n                <span className={'helloName'}>\n                    {`Hello, ${stateData.firstName || `...`}`}\n                </span>\n            </div>\n            <DynamicGameArea className={'dynamicGameArea'} stateData={stateData} />\n        </div>\n    );\n};\n\nexport default Play;\n","import React, {useState, useEffect} from 'react';\nimport GameRenderer from \"./gameRenderer\";\nimport {ADD_RESPONSE} from \"../../queries\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport Cookies from 'js-cookie';\nimport './playQuestion.css';\n\n//add response array and showResults func in parent\n\nconst answeredQuestionArray = [];\nconst GameScreen = (props) => {\n    const [triggerMutation, { data }] = useMutation(ADD_RESPONSE);\n    const [progress, setProgress] = useState(props.progress); //changed count to progress\n    const [questionNumber, setQuestionNumber] = useState(null);\n    const [haveImage, setHaveImage] = useState(\"\");\n    const [questionText, setQuestionText] = useState('');\n    const [options, setOptions] = useState([]);\n\n\n    useEffect(() => {\n        if (progress < props.stateData.questions.length) {\n            setQuestionText(props.stateData.questions[progress].question);\n            setHaveImage(props.stateData.questions[progress].haveImage);\n            const optionsArray = [props.stateData.questions[progress].optionOne,\n                props.stateData.questions[progress].optionTwo,\n                props.stateData.questions[progress].optionThree,\n                props.stateData.questions[progress].optionFour];\n            setOptions(optionsArray);\n            setQuestionNumber(progress + 1);\n        }\n        if (progress === props.stateData.questions.length) {\n            props.showResults();\n        }\n    }, [progress]);\n\n\n\n    const triggerNextQuestion = () => {\n        setProgress(progress + 1);\n    };\n\n    const addResponse = (response, point) => {\n        triggerMutation({\n            variables : {ID : Cookies.get('user_id'),\n            progress : questionNumber,\n            response : response,\n            points : point}\n        });\n    };\n\n\n\n\n\n    const checkAnswer = (optionText, ratio, qN) => {\n        if (progress < props.stateData.questions.length) {\n            if (!answeredQuestionArray.includes(qN)) {\n                answeredQuestionArray.push(qN);\n                if (ratio !== null) {\n                    if (optionText === props.stateData.questions[progress].correctOption) {\n                        let point = Math.round(ratio*100);\n                        addResponse(optionText, props.points + point);\n                        props.setPoints(props.points + point);\n                        setTimeout(() => triggerNextQuestion(), 500);\n                    }\n                    else {\n                        addResponse(optionText, props.points);\n                        setTimeout(() => triggerNextQuestion(), 500);\n                    }\n                }\n                else {\n                    addResponse(optionText, props.points);\n                    setTimeout(() => triggerNextQuestion(), 500);\n                }\n            }\n        }\n    };\n\n\n    return (\n        <div className={'gameScreen'}>\n            <GameRenderer questionText={questionText}\n                          stateData={props.stateData}\n                          questionNumber={questionNumber}\n                          haveImage={haveImage}\n                          options={options}\n                          progress={progress}\n                          checkAnswer={checkAnswer}\n                          totalQuestions={props.stateData.questions.length} />\n        </div>\n    );\n};\n\nexport default GameScreen;","import React from 'react';\nimport './playQuestion.css';\n\n\nconst Result = (props) => {\n    return(\n        <div className={'limitExceeded'}>\n            <h2 className={'limitExceededHead'}>Quiz Completed!</h2>\n            <div className={'limitExceeded-underline'}></div>\n            <h3 className={'limitExceededSubHead'}>Finished it like a <span\n                className={'limitExceeded-ninja'}>Ninja!</span></h3>\n            <div className={'pointsContainer'}>\n                <span className={'pointsHead'}>Your Score</span>\n                <span className={'pointsCount'}>{props.points}</span>\n            </div>\n            <a href={'https://quizapp-server.herokuapp.com/auth/logout'} className={'a-signout'}>\n                <div className={'button start-button'} >Sign Out</div>\n            </a>\n            <div className={'developer resultDeveloper'}>\n                <div className={'developer-underline'}></div>\n                <span className={'developer-name'}><span className={'developerDollarSign'}>$</span>{`\\{ Iam-VM }`}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Result;\n","import React, {useState, useEffect} from 'react';\nimport './playStart.css';\nimport {ADD_STUDENT_DATA} from '../../queries';\nimport {useMutation} from \"@apollo/react-hooks\";\nimport Cookies from \"js-cookie\";\n\n\n\nconst StudentForm = (props) => {\n\n    const [triggerMutation, { data }] = useMutation(ADD_STUDENT_DATA);\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n    const [phoneNumber, setPhoneNumber] = useState(null);\n    const [showPhoneNumberError, setShowPhoneNumberError] = useState(false);\n    \n    useEffect(() => {\n        setIsButtonDisabled(phoneNumber === null || phoneNumber === '' || isNaN(parseInt(phoneNumber) || showPhoneNumberError));\n    }, [phoneNumber, showPhoneNumberError]);\n\n    const formHandler = (e) => {\n        if (!((phoneNumber.length !== 10) || (parseInt(phoneNumber).toString().length !== phoneNumber.length))) {\n            e.preventDefault();\n            const phone = e.target.elements.phone.value;\n            const branch = e.target.elements.branch.value;\n            const year = e.target.elements.year.value;\n            triggerMutation({\n                variables : {ID : Cookies.get('user_id'),\n                    phone : phone,\n                    branch : branch,\n                    year : year}\n            });\n            props.setFormFilled(true);\n        }\n        else {\n            e.preventDefault();\n            setShowPhoneNumberError(true);\n        }\n    };\n    \n    const handlePhoneNumberChange = (e) => {\n        setPhoneNumber(e.target.value);\n        if (showPhoneNumberError) {\n            if (!((phoneNumber.length !== 10) || (parseInt(phoneNumber).toString().length !== phoneNumber.length))) {\n                setShowPhoneNumberError(false);\n            }\n        }\n    };\n\n\n    return (\n        <div className={'formWrapper'}>\n            <form className={'studentForm'} onSubmit={(e) => formHandler(e)}>\n                {(isButtonDisabled) ? <p className={'studentFormWarn'}>Please fill all fields to continue<span className={'formStar'}>*</span></p>:null}\n                <div className={'studentFormPhone'}>\n                    <label className={'studentFormLabel'}>Phone<sup className={'formStar'}>*</sup>  </label>\n                    <input onChange={handlePhoneNumberChange} maxLength={10} type=\"number\" id=\"phone\" name=\"phone\" className={'studentFormPhoneInput'} placeholder={'Phone Number without +91'}/>\n                    {(showPhoneNumberError) ? <p className={'studentFormWarn'}>This doesn't look like a phone number<span className={'formStar'}>!</span></p>:null}\n                </div>\n                <div className={'studentFormBranch'}>\n                    <label className={'studentFormLabel'}>Branch<sup className={'formStar'}>*</sup></label>\n                    <select id=\"branch\" name=\"branch\" className={'studentFormBranchInput'} >\n                        <option value={'CSE'}>CSE</option>\n                        <option value={'ECE'}>ECE</option>\n                        <option value={'ME'}>ME</option>\n                        <option value={'EEE'}>EEE</option>\n                        <option value={'IT'}>IT</option>\n                    </select>\n                </div>\n                <div className={'studentFormYear'}>\n                    <label className={'studentFormLabel'}>Year<sup className={'formStar'}>*</sup></label>\n                    <select id=\"year\" name=\"year\" className={'studentFormYearInput'} >\n                        <option value={'First'}>First</option>\n                        <option value={'Second'}>Second</option>\n                        <option value={'Third'}>Third</option>\n                        <option value={'Fourth'}>Fourth</option>\n                        <option value={'MTech1'}>MTech First</option>\n                        <option value={'MTech2'}>MTech Second</option>\n                    </select>\n                </div>\n                <button type={'submit'} disabled={isButtonDisabled} className={`button start-button studentFormButton ${isButtonDisabled?`disabledButton`:``}`} value={'Next'}>Next</button>\n            </form>\n        </div>\n    );\n};\n\nexport default StudentForm;\n","import React, {useEffect, useState} from 'react';\nimport GameScreen from './gameScreen';\nimport './playStart.css';\nimport '../homeComponents/home.css';\nimport './playQuestion.css';\nimport Result from \"./result\";\nimport StudentForm from './studentForm';\n\n\nconst DynamicGameArea = (props) => {\n\n    const [startClicked, setStartClicked] = useState(false);\n    const [showResultState, setShowResultState] = useState(false);\n    const [points, setPoints] = useState(null);\n    const [formFilled, setFormFilled] = useState(!(props.stateData.branch === null));\n\n    useEffect(() => {\n        setPoints(props.stateData.points);\n    }, []);\n\n\n    const showResults = () => {\n        setShowResultState(true);\n    };\n    if (props.stateData.progress === props.stateData.questions.length){\n        return <Result points={points} />;\n    }\n\n    if (!formFilled ){\n        return <StudentForm setFormFilled={setFormFilled} />;\n    }\n    else {\n        if (!startClicked){\n            return (\n                <div className={'gameArea'}>\n                    <p className={'start-text'}>You are ready to go</p>\n                    <div className={'start-underLine'}></div>\n                    <div className={'button start-button'} onClick={() => setStartClicked(true)}>Start Game</div>\n                </div>\n            );\n        }\n        if (showResultState) {\n            return <Result points={points} />;\n        }\n        return <GameScreen stateData = {props.stateData} setPoints={setPoints} points={points} showResults={showResults} progress={props.stateData.progress} />;\n    }\n};\n\n\nexport default DynamicGameArea;\n","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div className={'loadingContainerMain'}>\n            <div className={'loadingContainer'}>\n            <span className={'loadingText'}>\n                Loading...\n            </span>\n            </div>\n        </div>\n    );\n\n};\n\nexport default Loading;","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div className={'errorContainerMain'}>\n            <div className={'errorContainer'}>\n            <span className={'errorText'}>\n                Oops!! An Error occurred while fetching data\n            </span>\n            </div>\n        </div>\n    );\n\n};\n\nexport default Loading;","import React from 'react';\n\nconst HaveNotPlayed = (props) => {\n    return (\n        <div className={'haveNotPlayed'}>\n            <p className={'haveNotPlayedText'}>Seems like You missed Level 1 <span className={'formStar'}> !</span></p>\n            <a href={'https://quizapp-server.herokuapp.com/auth/logout'} className={'a-signout'}>\n                <div className={'button start-button'} >Sign Out</div>\n            </a>\n        </div>\n    );\n};\n\nexport default HaveNotPlayed;","import React from 'react';\n\nconst BelowCutOff = (props) => {\n  return (\n      <div className={'belowCutOff'}>\n          <p className={'belowCutOffText'}>Seems Like You didn't qualify Level 1<span className={'formStar'}> !</span></p>\n          <div className={'belowCutOff-container'}>\n              <span className={'belowCutOff-containerText'}>Your score  <span className={'belowCutOff-containerPoints'}>{props.points}</span></span>\n              <span className={'belowCutOff-containerText'}>Our cutoff  <span className={'belowCutOff-containerCutOff'}>500</span></span>\n          </div>\n          <a href={'https://quizapp-server.herokuapp.com/auth/logout'} className={'a-signout'}>\n              <div className={'button start-button'} >Sign Out</div>\n          </a>\n      </div>\n  );\n};\n\nexport default BelowCutOff;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../App.css';\n\nconst ErrorNotFound = (props) => {\n    return(\n        <div className={'errorNotFound'}>\n            <div className={'errorNotFound-content'}>\n                <h1 className={'errorNotFound-error'}>Error</h1>\n                <h1 className={'errorNotFound-code'}>#404</h1>\n            </div>\n            <Link to={'/'} className={'backToHome'}>Back to /</Link>\n        </div>\n    );\n};\n\nexport default ErrorNotFound;\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Home from './components/home';\nimport Play from './components/playLevelTwo';\nimport ErrorNotFound from './components/errorNotFound';\n\n\nconst setBodyStyles = () => {\n  document.body.classList.add('body');\n};\n\nconst App = () => {\n  setBodyStyles();\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/quiz/play' component={Play} exact />\n          <Route component={ErrorNotFound} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ApolloProvider} from 'react-apollo';\nimport ApolloClient from 'apollo-boost';\n\n//TODO: do change this during production\nconst API_PROD = 'https://quizapp-server.herokuapp.com/iamvmgraphqlapi';\n\n//apollo setup\nconst client = new ApolloClient({\n  uri : API_PROD\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n        <ApolloProvider client={client}>\n            <App />\n        </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}